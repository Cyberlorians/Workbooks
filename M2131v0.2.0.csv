Criticality,CSL1,CSL2,CSL3,CSL4,Function,Category,Sub-Category,Required Data,Workload,Table,Schema,Schema Value,Workload  Integration,Event Reference,Microsoft Sentinel Event,Microsoft XDR Event
EL0,01,AA,01,,Identity,Identity & Credential Management,Account,Account Creation,Entra,AuditLogs,OperationName,Add User,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-audit-logs,"AuditLogs
| where TimeGenerated > ago(90d)
| where OperationName == ""Add user""
// Safely parse the nested JSON fields.
| extend InitiatorInfo = todynamic(InitiatedBy)
| extend TargetInfo = todynamic(TargetResources)[0] 
// Create the final, clean columns
| extend
    Status = Result,
    FailureReason = tostring(ResultSignature),
    InitiatorType = case(
        tostring(InitiatorInfo.user.userPrincipalName) has_cs ""Sync"", ""Sync Process"",
        isnotempty(InitiatorInfo.user.userPrincipalName), ""Interactive User"",
        isnotempty(InitiatorInfo.app.displayName), ""Application"",
        ""Other""
    ),
    Initiator = coalesce(tostring(InitiatorInfo.user.userPrincipalName), tostring(InitiatorInfo.app.displayName)),
    InitiatorIpAddress = tostring(InitiatorInfo.user.ipAddress),
    TargetUserUPN = tostring(TargetInfo.userPrincipalName),
    TargetUserID = tostring(TargetInfo.id)
// Using distinct to select the columns on a single line
| distinct TimeGenerated, Status, FailureReason, InitiatorType, Initiator, InitiatorIpAddress, TargetUserUPN, TargetUserID
| sort by TimeGenerated desc
| take 10",NA
EL0,01,AB,01,,Identity,Identity & Credential Management,Account,Account Creation,Entra,AuditLogs,OperationName,Add Service Principal,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-audit-logs,"AuditLogs
| where TimeGenerated > ago(90d)
| where OperationName == ""Add service principal""
// This block now correctly finds and extracts the AppId from AdditionalDetails
| mv-apply Detail = todynamic(AdditionalDetails) on (
    where Detail.key == ""AppId""
    | project TargetSpAppId = tostring(Detail.value)
)
// Safely parse the other nested JSON fields
| extend InitiatorInfo = todynamic(InitiatedBy)
| extend TargetSpInfo = todynamic(TargetResources)[0]
// Create the final, clean columns
| extend
    Status = Result,
    FailureReason = tostring(ResultSignature),
    InitiatorType = case(
        isnotempty(InitiatorInfo.user.userPrincipalName), ""User"",
        isnotempty(InitiatorInfo.app.displayName), ""Application"",
        Identity has_cs ""Microsoft"", ""Microsoft Service"",
        ""Other""
    ),
    Initiator = coalesce(
        tostring(InitiatorInfo.user.userPrincipalName),
        tostring(InitiatorInfo.app.displayName),
        tostring(Identity)
    ),
    InitiatorIpAddress = tostring(InitiatorInfo.user.ipAddress),
    TargetSpName = tostring(TargetSpInfo.displayName),
    TargetSpId = tostring(TargetSpInfo.id)
// Using distinct to select the columns on a single line
| distinct TimeGenerated, OperationName, Status, FailureReason, InitiatorType, Initiator, InitiatorIpAddress, TargetSpName, TargetSpAppId, TargetSpId
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,AC,01,,Identity,Identity & Credential Management,Account,Account Creation,Entra,MicrosoftGraphActivityLogs,RequestUri,Applications,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,"https://learn.microsoft.com/en-us/graph/api/application-post-applications?view=graph-rest-1.0&tabs=http

","MicrosoftGraphActivityLogs
| where TimeGenerated > ago(90d)
| where RequestMethod == 'POST'
| where RequestUri has '/servicePrincipals'
// Efficiently join on pre-filtered tables
| join kind=inner (
    AuditLogs
    | where TimeGenerated > ago(90d)
    | where OperationName == ""Add service principal""
    // We only want events started by a user for this join to work
    | where isnotempty(todynamic(InitiatedBy).user.id)
    | extend InitiatingUserId = tostring(todynamic(InitiatedBy).user.id)
)
// The join connects the user who made the API call with the user in the audit log
on $left.UserId == $right.InitiatingUserId
// Parse all the necessary fields from the joined tables
| extend
    Status = Result,
    FailureReason = tostring(ResultSignature),
    Initiator = tostring(todynamic(InitiatedBy).user.userPrincipalName),
    TargetSpName = tostring(todynamic(TargetResources)[0].displayName)
// Project the final, separate columns for a clean report
| distinct TimeGenerated = ActivityDateTime, OperationName, Status, FailureReason, Initiator, ApiEndpoint = RequestUri, TargetSpName
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,AD,01,,Identity,Identity & Credential Management,Account,Account Creation,Entra,MicrosoftGraphActivityLogs,RequestUri,ServicePrincipals,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/graph/api/serviceprincipal-post-serviceprincipals,"MicrosoftGraphActivityLogs //View SP POST (Success/Failures) methods from PowerShell, GraphExplorer, Consent Grant and etc
| where TimeGenerated > ago(90d)
| where RequestMethod == 'POST'
| where RequestUri has '/servicePrincipals' //Captures /beta and /v1.0
| join ( AuditLogs
| extend id_ = tostring(parse_json(tostring(InitiatedBy.user)).id)
)
on $left.UserId == $right.id_
| where OperationName == ""Add service principal""
| distinct ActivityDateTime, RequestUri, ['Service'] = Identity, ['InitiatedByApp'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), ['InitiatedByUser'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), OperationName, Result, ['Target-Resource'] = tostring(TargetResources)
| sort by ActivityDateTime desc
| take 1000",NA
EL0,01,AE,01,,Identity,Identity & Credential Management,Account,Account Creation,Entra,MicrosoftGraphActivityLogs,RequestUri,Users,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/graph/api/user-post-users,"MicrosoftGraphActivityLogs //View SP POST (Success/Failures) methods on Add user
| where TimeGenerated > ago(90d)
| where RequestMethod == 'POST'
| where RequestUri has '/users' //Captures /beta and /v1.0
| join (
    AuditLogs
    | extend Id = tostring(parse_json(tostring(InitiatedBy.user)).id)
) on $left.UserId == $right.Id
| where OperationName == ""Add user""
| distinct ActivityDateTime, RequestUri, ['Service'] = Identity, ['InitiatedByApp'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), ['InitiatedByUser'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), OperationName, Result, ['Target-Resource'] = tostring(TargetResources)
| sort by ActivityDateTime desc
| take 1000",NA
EL0,01,AF,01,,Identity,Identity & Credential Management,Account,Account Creation,Entra,AADProvisioningLogs,ProvisioningAction,Create,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-provisioning-logs#what-can-you-do-with-the-provisioning-logs,"AADProvisioningLogs //Users created (Success/Skipped/Failures) by AADProvisioningService - Connect Sync server is an example
| where TimeGenerated > ago(90d)
| where ProvisioningAction == ""create"" //creation is shown by any type service principal using SCIM
| extend ['Service'] = tostring(parse_json(InitiatedBy).Name)
| extend ['InitiatedByApp'] = tostring(parse_json(ServicePrincipal).Name)
| distinct TimeGenerated, ['Service'], ['InitiatedByApp'], OperationName, ResultType, ModifiedProperties
| take 1000",NA
EL0,01,AG,02,,Identity,Identity & Credential Management,Account,Account Creation,Windows,SecurityEvent,Activity,4720(S): A user account was created,https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4720,"SecurityEvent
| where TimeGenerated > ago(90d)
| where EventData == 4720
| where Activity == ""4720 - A user account was created.""
| distinct TimeGenerated, Activity, ['Initiated By'] = SubjectUserName, TargetUserName
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,AH,06,,Identity,Identity & Credential Management,Account,Account Creation,Microsoft Defender for Endpoint,DeviceEvents,ActionType,User Account Created,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDE,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-deviceevents-table,"DeviceEvents 
| where TimeGenerated > ago(90d)
| where ActionType == ""UserAccountCreated"" //Detect when a local user account is created on an endpoint, will reveal accounts created on Domain Controllers if agent is present
//Exclude defaultuser1 which is created by Windows through different processes 
| where AccountName != ""defaultuser1""
| project
    TimeGenerated, 
    ActionType,
    InitiatedBy=InitiatingProcessAccountName,  
    ['Initiated On Device'] = DeviceName,
    ['Account Created Name']=AccountName,
     AccountSid, AccountDomain
| sort by TimeGenerated desc 
| take 1000","DeviceEvents 
| where Timestamp > ago(30d)
| where ActionType == ""UserAccountCreated"" //Detect when a local user account is created on an endpoint, will reveal accounts created on Domain Controllers if agent is present
//Exclude defaultuser1 which is created by Windows through different processes 
| where AccountName != ""defaultuser1""
| project
    Timestamp, 
    ActionType,
    InitiatedBy=InitiatingProcessAccountName,  
    ['Initiated On Device'] = DeviceName,
    ['Account Created Name']=AccountName,
     AccountSid, AccountDomain
| sort by Timestamp desc 
| take 1000"
EL0,01,AI,07,,Identity,Identity & Credential Management,Account,Account Creation,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType,User Account Created,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-identitydirectoryevents-table,"IdentityDirectoryEvents //Defender for Identity detecting when directory user account was created and by whom
| where TimeGenerated > ago(90d)
| where ActionType == ""User Account Created"" 
| distinct TimeGenerated, ActionType, ['Initiated By'] = tostring(AdditionalFields.[""ACTOR.ACCOUNT""]), ['Initiated On'] = DestinationDeviceName, TargetAccountUpn, TargetAccountDisplayName
| sort by TimeGenerated desc
| take 1000","IdentityDirectoryEvents //Defender for Identity detecting when directory user account was created and by whom
| where Timestamp > ago(30d)
| where ActionType == ""User Account Created"" 
| distinct Timestamp, ActionType, ['Initiated By'] = tostring(AdditionalFields.[""ACTOR.ACCOUNT""]), ['Initiated On'] = DestinationDeviceName, TargetAccountUpn, TargetAccountDisplayName
| sort by Timestamp desc
| take 1000"
EL0,01,AJ,07,,Identity,Identity & Credential Management,Account,Account Creation,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType,Device Account Created,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-identitydirectoryevents-table,"IdentityDirectoryEvents //Defender for Identity detecting when directory device account was created and by whom. No domain suffix could mean admin manually created object
| where TimeGenerated > ago(90d)
| where ActionType == ""Device Account Created""
| distinct TimeGenerated, ActionType, ['Initiated By'] = tostring(AdditionalFields.[""ACTOR.ACCOUNT""]), ['Initiated On'] = DestinationDeviceName, ['Device Created'] = TargetDeviceName
| sort by TimeGenerated desc
| take 1000","IdentityDirectoryEvents //Defender for Identity detecting when directory device account was created and by whom. No domain suffix could mean admin manually created object
| where Timestamp > ago(30d)
| where ActionType == ""Device Account Created""
| distinct 
Timestamp, ActionType, ['Initiated By'] = tostring(AdditionalFields.[""ACTOR.ACCOUNT""]), ['Initiated On'] = DestinationDeviceName, ['Device Created'] = TargetDeviceName
| sort by Timestamp desc
| take 1000"
EL0,01,AK,04,,Identity,Identity & Credential Management,Account,AccountCreation,Sentinel,IdentityInfo,SourceSystem,ActiveDirectory,https://learn.microsoft.com/en-us/azure/sentinel/enable-entity-behavior-analytics?tabs=azure,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-identityinfo-table,"let srvcList = dynamic([""svcaccount""]); //use inline with where accountupn srvclist
IdentityInfo
| where TimeGenerated > ago(90d)
| where SourceSystem == ""ActiveDirectory""
//| where AccountUpn in~ (srvcList) //edit to verify your svc creations
| where AccountName == 'svc_m2131' //edit your svc acct
| distinct AccountCreationTime, AccountName, AccountUPN, IsAccountEnabled, OnPremisesDistinguishedName
| sort by AccountCreationTime desc
| take 1000","let srvcList = dynamic([""svcaccount""]); //use inline with where accountupn srvclist
IdentityInfo
| where Timestamp > ago(30d)
| where SourceProvider == ""ActiveDirectory""
//| where AccountUpn in~ (srvcList) //edit to verify your svc creations
| where AccountName == 'svc_m2131' //edit your svc acct
| distinct Timestamp, AccountName, AccountUpn, IsAccountEnabled, DistinguishedName
| sort by Timestamp desc
| take 1000"
EL0,01,BA,01,,Identity,Identity & Credential Management,Manage Credential Type,Credential Management,Entra,AuditLogs,ActivityDisplayName,Authentication Methods Policy Update,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities#authentication-methods,"AuditLogs
| where TimeGenerated > ago(90d)
| where OperationName == ""Authentication Methods Policy Update"" //Entra Auth Methods updated for specific tenant. To review configured, review UI or graph call.
| distinct TimeGenerated, OperationName, ['Initiated By'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(TargetResources)
| take 1000",NA
EL0,01,BB,01,,Identity,Identity & Credential Management,Manage Credential Type,Credential Management,Entra,AuditLogs,LoggedByService,Self-service password management,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/authentication/howto-sspr-reporting,"AuditLogs
| where TimeGenerated > ago(90d)
| where LoggedByService == ""Self-service Password Management""
| extend ['Activity Actor'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| distinct TimeGenerated, ['Activity Actor'], Result, ResultDescription, tostring(TargetResources)
| sort by TimeGenerated
| take 1000",NA
EL0,01,BC,02,,Identity,Identity & Credential Management,Manage Credential Type,Credential Management,Windows,Event,Source,Entra Connect Admin Actions,https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/entra/identity/hybrid/connect/admin-audit-logging,"let EventMapping = datatable(EventID: int, EventName: string)
[
    2503, ""Add/Update/Delete Directories"",
    2504, ""Enable Express settings mode"",
    2505, ""Enable/Disable domains and OU for sync"",
    2506, ""Enable/Disable PHS Sync"",
    2507, ""Enable/Disable Sync start after install"",
    2508, ""Create ADDS account"",
    2509, ""Use Existing ADDS account"",
    2510, ""Create/Update/Delete custom sync rule"",
    2511, ""Enable/Disable Domain based filtering"",
    2512, ""Enable/Disable OU based filtering"",
    2513, ""User Sign-In method changed"",
    2514, ""Configure new ADFS farm"",
    2515, ""Enable/Disable Single sign-on"",
    2516, ""Install web application proxy server"",
    2517, ""Set Permissions"",
    2518, ""Change ADDS Connector credential"",
    2519, ""Reinitialize Entra ID Connector account password"",
    2520, ""Install ADFS Server"",
    2521, ""Set ADFS Service Account""
];
Event
| where TimeGenerated > ago(90d)
| where Source == ""Entra Connect Admin Actions""
| extend ['Action'] = tostring(parse_json(RenderedDescription).ActionType)
| join kind=inner (EventMapping) on $left.EventID == $right.EventID
| distinct TimeGenerated, Source, Computer, ['Action'], EventID, EventName, RenderedDescription
| sort by TimeGenerated desc  
| take 1000",NA
EL0,01,BD,01,,Identity,Identity & Credential Management,Manage Credential Type,Credential Management,Entra,AuditLogs,OperationName,*Conditional access policy,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/conditional-access/troubleshoot-policy-changes-audit-log,"AuditLogs //reviewing CRUD for Conditional Access policies. NonHumanActor represents a SP doing the CRUD of the CA.
| where TimeGenerated > ago(90d)
| where OperationName in (""Add conditional access policy"", ""Update conditional access policy"", ""Delete conditional access policy"")
| project
    TimeGenerated,
    Operation=OperationName,
    Policy=TargetResources[0].displayName,
    HumanActor=InitiatedBy.user.userPrincipalName,
    NonHumanActor=Identity,
    TargetResources
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,BE,01,,Identity,Identity & Credential Management,Manage Credential Type,Credential Management,Entra,MicrosoftGraphActivityLogs,RequestUri,Users,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,"https://learn.microsoft.com/en-us/graph/api/user-post-users?view=graph-rest-1.0&tabs=http

","MicrosoftGraphActivityLogs  //View SP POST (Success/Failures) methods on update user
| where TimeGenerated > ago(90d)
| where RequestMethod == 'POST'
| where RequestUri has '/users'
| join (
    AuditLogs
    | extend Id = tostring(parse_json(tostring(InitiatedBy.user)).id)
) on $left.UserId == $right.Id
| where Result == ""success""
| where OperationName == ""Update user""
| project ActivityDateTime, RequestUri, ['Service'] = Identity, ['InitiatedByApp'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), ['InitiatedByUser'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), OperationName, Result, ['Target-Resource'] = tostring(TargetResources)
| sort by ActivityDateTime desc
| take 1000",NA
EL0,01,BF,08,,Identity,Identity & Credential Management,Manage Credential Type, (PIV or CAC) & Derived Credentials,Microsoft Intune,IntuneAuditLogs,OperationName,Device Configuration,https://learn.microsoft.com/en-us/mem/intune/fundamentals/review-logs-using-azure-monitor#send-logs-to-azure-monitor,"
https://learn.microsoft.com/en-us/mem/intune/protect/derived-credentials","IntuneAuditLogs
| where TimeGenerated > ago(90d)
| where OperationName has 'DeviceConfiguration'
| where parse_json(tostring(Properties)) has ""DerivedCredentialSettingsRef""
| take 1000",NA
EL0,01,BG,01,,Identity,Identity & Credential Management,Manage Credential Type, (PIV or CAC) & Derived Credentials,Entra,AuditLogs,OperationName,TrustedCAsfForPasswordlessAuth,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-certificate-based-authentication,"AuditLogs //Setting Trusted Certificate Authorities in Entra CAs
| where TimeGenerated > ago(90d)
| where OperationName == ""Set Company Information""
| mv-expand TargetResources
| extend ['Tenant Name'] = TargetResources.displayName
| extend ['Tenant Id'] = TargetResources.id
| extend ['Initiated By'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| extend modifiedProperties = TargetResources.modifiedProperties
| extend displayName = tostring(modifiedProperties[0].displayName),   
         oldValue = tostring(modifiedProperties[0].oldValue),       
         newValue = tostring(modifiedProperties[0].newValue)  
| where displayName == ""TrustedCAsForPasswordlessAuth""      
| project TimeGenerated,['Initiated By'], ['Tenant Name'], ['Tenant Id'], ['Configuration'] = displayName, oldValue, newValue
| take 1000",NA
EL0,01,BH,01,,Identity,Identity & Credential Management,Manage Credential Type, (PIV or CAC) & Derived Credentials,Entra,AuditLogs,Category,PublicKeyInfrastructure,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/authentication/how-to-certificate-based-authentication#step-1-configure-the-certificate-authorities-with-pki-based-trust-store-preview,"AuditLogs
| where TimeGenerated > ago(90d)
| where Category == ""PublicKeyInfrastructure""
| extend ['Initiated By'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| distinct TimeGenerated, Category, ActivityDisplayName, AADOperationType, ['Initiated By'], Result, tostring(TargetResources)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,BI,01,,Identity,Identity & Credential Management,Manage Credential Type,Cert,Entra,AuditLogs,OperationName ,Update User,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-audit-logs,"AuditLogs //Update of Certuserid w/ x509. Could be native in Entra, Sync, PowerShell, Graph.
| where TimeGenerated > ago(90d)
| where OperationName == ""Update user""
| where parse_json(tostring(TargetResources[0])) has ""CertificateUserIds"" or parse_json(tostring(TargetResources[0])) has ""X509""
| distinct TimeGenerated, ['Initiated By'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), ['Target User'] = tostring(TargetResources[0].userPrincipalName), ['Modified CertUserID'] = tostring(parse_json(tostring(parse_json(TargetResources)[0].modifiedProperties)))
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,BJ,07,,Identity,Identity & Credential Management,Manage Credential Type,Cert,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType,ADCS Certificate issuance,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI,https://techcommunity.microsoft.com/blog/microsoftthreatprotectionblog/securing-ad-cs-microsoft-defender-for-identitys-sensor-unveiled/3980265,"IdentityDirectoryEvents //Review Issuing Certificate Issuance to UPN/DisplayName w/ Issuing-CA/SKI
| where TimeGenerated > ago(90d)
| where ActionType == ""ADCS Certificate issuance""
| distinct TimeGenerated, ['Issued-UPN'] = AccountUpn, ['Issued-DisplayName'] = AccountDisplayName, ['Issuing-CA'] = DestinationDeviceName, ['Issued SubjectKeyIdentifier'] = tostring(AdditionalFields.SubjectKeyIdentifier)
| sort by TimeGenerated desc
| take 1000","IdentityDirectoryEvents //Review Issuing Certificate Issuance to UPN/DisplayName w/ Issuing-CA/SKI
| where Timestamp > ago(30d)
| where ActionType == ""ADCS Certificate issuance""
| distinct Timestamp, ['Issued-UPN'] = AccountUpn, ['Issued-DisplayName'] = AccountDisplayName, ['Issuing-CA'] = DestinationDeviceName, ['Issued SubjectKeyIdentifier'] = tostring(AdditionalFields.SubjectKeyIdentifier)
| sort by Timestamp desc
| take 1000"
EL0,01,BK,01,,Identity,Identity & Credential Management,Manage Credential Type,MFA,Entra,AuditLogs,OperationName,Security Info,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-audit-logs,"AuditLogs //will show both user and administrator registered security information
| where TimeGenerated > ago(90d)
| where OperationName has ""security info""
| where Result == ""success""
| extend IPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)
| extend UserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| extend UserId = tostring(TargetResources[0].id)
| distinct UserPrincipalName, UserId, IPAddress, OperationName, ResultDescription, TimeGenerated
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,BL,01,,Identity,Identity & Credential Management,Manage Credential Type,Password,Entra,AuditLogs,OperationName,Change User Password,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-audit-logs,"AuditLogs //change user password. Most orgs will witness by Sync but split to see by user.
| where TimeGenerated > ago(90d)
| where OperationName == ""Change user password""  
| extend Actor= InitiatedBy.user.userPrincipalName  
//| distinct TimeGenerated, ['Initiated By'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), ['Target User'] = tostring(TargetResources[0].userPrincipalName), ['Modified Value'] = tostring(parse_json(tostring(parse_json(TargetResources)[0].modifiedProperties)))
| extend InitiatedBySync = iif(tostring(InitiatedBy.user.userPrincipalName) !has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| extend InitiatedByUser = iif(tostring(InitiatedBy.user.userPrincipalName) has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| distinct TimeGenerated,       
            ['Service'] = Identity,      
            ['InitiatedByApp'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), 
            ['InitiatedBySync'], 
            ['InitiatedByUser'], 
            Result,
            ['Target-Resource'] = tostring(TargetResources)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,BM,02,,Identity,Identity & Credential Management,Manage Credential Type,Password,Windows,Event,Source,Microsoft-AzureADPasswordProtection-DCAgent,https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/entra/identity/authentication/howto-password-ban-bad-on-premises-monitor,"Event
| where Source == ""Microsoft-AzureADPasswordProtection-DCAgent""
| summarize PasswordChangesValidated = countif(EventID == 10014), PasswordSetsValidated = countif(EventID == 10015), PasswordChangesRejected = countif(EventID == 10016), PasswordSetsRejected = countif(EventID == 10017), PasswordChangeAuditOnlyFailures = countif(EventID == 10024), PasswordSetAuditOnlyFailures = countif(EventID == 10025), PasswordChangeErrors = countif(EventID == 10012), PasswordSetErrors = countif(EventID == 10013) by bin(TimeGenerated, 90d), Computer
|  sort by TimeGenerated desc
| take 1000",NA
EL0,01,BN,01,,Identity,Identity & Credential Management,Manage Credential Type,Password,Entra,AuditLogs,OperationName,Update company settings,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/authentication/howto-password-ban-bad-on-premises-operations,"AuditLogs
| where TimeGenerated > ago(90d)
| where OperationName == ""Update company settings""
| extend BannedPasswordCheckOnPremisesMode = tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0].Settings))[0].Properties))[0].Value)
| extend EnableBannedPasswordCheckOnPremises = tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0].Settings))[0].Properties))[1].Value)
| extend EnableBannedPasswordCheck = tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0].Settings))[0].Properties))[2].Value)
| extend LockoutDurationInSeconds = tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0].Settings))[0].Properties))[3].Value)
| extend LockoutThreshold = tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0].Settings))[0].Properties))[4].Value)
| extend BannedPasswordList = tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0].Settings))[0].Properties))[5].Value)
| distinct TimeGenerated, BannedPasswordCheckOnPremisesMode, EnableBannedPasswordCheckOnPremises, EnableBannedPasswordCheck, LockoutDurationInSeconds, LockoutThreshold, BannedPasswordList
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,BO,02,,Identity,Identity & Credential Management,Manage Credential Type,Password,Windows,SecurityEvent,Activity,"4723(S, F): An attempt was made to change an account's password",https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4723,"SecurityEvent
| where TimeGenerated > ago(90d)
| where EventID == 4723
| where Activity == ""4723 - An attempt was made to change an account\'s password.""
| distinct TimeGenerated, Activity,  ['Initiated By'] = SubjectUserName, TargetUserName
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,BP,02,,Identity,Identity & Credential Management,Manage Credential Type,Password,Windows,SecurityEvent,Activity,"4724(S, F): An attempt was made to reset an account's password",https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4724,"SecurityEvent
| where TimeGenerated > ago(90d)
| where EventID == 4724
| where Activity == ""4724 - An attempt was made to reset an account\'s password.""
| distinct TimeGenerated, Activity, ['Initiated By'] = SubjectUserName, TargetUserName
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,BQ,07,,Identity,Identity & Credential Management,Manage Credential Type,Password,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType ,Account Password Change,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-identitydirectoryevents-table,"IdentityDirectoryEvents
| where TimeGenerated > ago(90d)
| where ActionType == ""Account Password changed"" //tracks both targetupn and targetdevicename
| distinct TimeGenerated, ActionType, TargetDeviceName, TargetAccountUpn, TargetAccountDisplayName, tostring(AdditionalFields)
| take 1000","IdentityDirectoryEvents
| where Timestamp > ago(30d)
| where ActionType == ""Account Password changed"" //tracks both targetupn and targetdevicename
| distinct Timestamp, ActionType, TargetDeviceName, TargetAccountUpn, TargetAccountDisplayName, tostring(AdditionalFields)
| take 1000"
EL0,01,CA,01,,Identity,Identity & Credential Management,Attributes,Establish/Manage: Organization & Groups/Roles,Entra,AuditLogs,TargetResources,Attribute Value,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-audit-logs,"AuditLogs //review modified properties (attributes) from users, service, sync and scim
| where TimeGenerated > ago(90d)
| extend x = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].displayName)
| extend [""Attribute Value""] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0])
| extend Target = tostring(TargetResources[0].userPrincipalName)
| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| parse x with * '.' ['Attribute Set Name'] ""_"" *
| extend [""Attribute Name""]=split(x, ""_"")[1]
| extend InitiatedBySync = iif(tostring(InitiatedBy.user.userPrincipalName) !has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| extend InitiatedByUser = iif(tostring(InitiatedBy.user.userPrincipalName) has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| distinct TimeGenerated,       
            ['Service'] = Identity,      
            ['InitiatedByApp'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), 
            ['InitiatedBySync'], 
            ['InitiatedByUser'], 
            Result,
            ['Target-Resource'] = tostring(TargetResources)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,CB,07,,Identity,Identity & Credential Management,Attributes,Establish/Manage: Organization & Groups/Roles,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType,ADAttributeChanges,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI,https://learn.microsoft.com/en-us/defender-for-identity/monitored-activities#monitored-user-activities-user-account-ad-attribute-changes,"//capturing attribute changes based off MDI actiontypes, user attributes. See windows event logs (EVENTID 5136) for extended attribute changes.
let ADAttributeChanges = 
    dynamic([
        ""Account Constrained Delegation State Changed"",
        ""Account Constrained Delegation SPNs Changed"",
        ""Account Delegation Changed"",
        ""Account Disabled Changed"",
        ""Account Expired"",
        ""Account Expiry Time Changed"",
        ""Account Locked Changed"",
        ""Account Password Changed"",
        ""Account Password Expired"",
        ""Account Password Never Expires Changed"",
        ""Account Password Not Required Changed"",
        ""Account Smartcard Required Changed"",
        ""Account Supported Encryption Types Changed"",
        ""Account Unlock changed"",
        ""Account UPN Name Changed"",
        ""Group Membership Changed"",
        ""User Mail Changed""
    ]);
IdentityDirectoryEvents
| where TimeGenerated > ago(90d)
| where ActionType has_any (ADAttributeChanges)
| distinct TimeGenerated, ActionType, Application, TargetAccountUpn, TargetAccountDisplayName, TargetDeviceName, tostring(AdditionalFields)
| sort by TimeGenerated desc
| take 1000
","//capturing attribute changes based off MDI actiontypes, user attributes. See windows event logs (EVENTID 5136) for extended attribute changes.
let ADAttributeChanges = 
    dynamic([
        ""Account Constrained Delegation State Changed"",
        ""Account Constrained Delegation SPNs Changed"",
        ""Account Delegation Changed"",
        ""Account Disabled Changed"",
        ""Account Expired"",
        ""Account Expiry Time Changed"",
        ""Account Locked Changed"",
        ""Account Password Changed"",
        ""Account Password Expired"",
        ""Account Password Never Expires Changed"",
        ""Account Password Not Required Changed"",
        ""Account Smartcard Required Changed"",
        ""Account Supported Encryption Types Changed"",
        ""Account Unlock changed"",
        ""Account UPN Name Changed"",
        ""Group Membership Changed"",
        ""User Mail Changed""
    ]);
IdentityDirectoryEvents
| where Timestamp > ago(30d)
| where ActionType has_any (ADAttributeChanges)
| distinct Timestamp, ActionType, Application, TargetAccountUpn, TargetAccountDisplayName, TargetDeviceName, tostring(AdditionalFields)
| sort by Timestamp desc
| take 1000


IdentityDirectoryEvents
//| where Application == ""Active Directory""
| where Timestamp > ago(90d)
| where ActionType contains 'group'
| extend ToGroup = tostring(parse_json(AdditionalFields).[""TO.GROUP""])
| extend FromGroup = tostring(parse_json(AdditionalFields).[""FROM.GROUP""])
| extend Action = iff(isempty(ToGroup), ""Remove"", ""Add"")
| extend GroupModified = iff(isempty(ToGroup), FromGroup, ToGroup)
| extend Target_Group = tostring(parse_json(AdditionalFields).[""TARGET_OBJECT.GROUP""])
| sort by Timestamp desc 
| take 1000"
EL0,01,CC,06,,Identity,Identity & Credential Management,Attributes,Establish/Manage: Organization & Groups/Roles,Microsoft Defender for Endpoint,DeviceEvents,ActionType,group,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDE,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-deviceevents-table,"DeviceEvents //establish/manage org and groups/roles
| where TimeGenerated > ago(90d)
| where ActionType contains ""group""
| distinct TimeGenerated, ActionType, DeviceName, ['Initiated By'] = InitiatingProcessAccountName, tostring(AdditionalFields)
| sort by TimeGenerated desc
| take 1000","DeviceEvents //establish/manage org and groups/roles
| where Timestamp > ago(30d)
| where ActionType contains ""group""
| distinct Timestamp, ActionType, DeviceName, ['Initiated By'] = InitiatingProcessAccountName, tostring(AdditionalFields)
| sort by Timestamp desc
| take 1000"
EL0,01,CD,02,,Identity,Identity & Credential Management,Attributes,Establish/Manage: Organization & Groups/Roles,Windows,SecurityEvent,Activity,5137(S): A directory service object was modified,https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-5137,"SecurityEvent //This event documents creations of AD objects, identifying the object created and user who created it. 
| extend d = parse_xml(EventData)
| extend EventDataParsed = parse_json(tostring(d.EventData))
| mv-expand DataItem = EventDataParsed.Data
| where TimeGenerated > ago(90d)
| where EventID == 5137
| where Activity == ""5137 - A directory service object was created.""
| distinct TimeGenerated, Name = tostring(DataItem[""@Name""]), Value = tostring(DataItem[""#text""]), Activity, Source = ""SecurityEvent""
| summarize 
    InitiatedBy = anyif(Value, Name == ""SubjectUserName""),
    TargetUserName = anyif(Value, Name == ""ObjectDN""),
    ['Object Class'] = anyif(Value, Name == ""ObjectClass""),
    ['Attributes'] = make_list_if(Value, Name contains ""Attribute"")
    by TimeGenerated, Activity
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,CE,01,,Identity,Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Entra,AuditLogs,OperationName ,Update user,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-audit-logs,"AuditLogs //audit update user by service, app or user
| where TimeGenerated > ago(90d)
| where OperationName == 'Update user'
| extend InitiatedBySync = iif(tostring(InitiatedBy.user.userPrincipalName) !has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| extend InitiatedByUser = iif(tostring(InitiatedBy.user.userPrincipalName) has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| distinct TimeGenerated,       
            ['Service'] = Identity,      
            ['InitiatedByApp'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), 
            ['InitiatedBySync'], 
            ['InitiatedByUser'], 
            Result,
            ['Target-Resource'] = tostring(TargetResources)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,CF,07,,Identity,Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType,ADAttributeChanges,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-identitydirectoryevents-table,"//capturing attribute changes based off MDI actiontypes, all attributes. 
let ADAttributeChanges = 
    dynamic([
        ""Account Constrained Delegation State Changed"",
        ""Account Constrained Delegation SPNs Changed"",
        ""Account Delegation Changed"",
        ""Account Disabled Changed"",
        ""Account Expired"",
        ""Account Expiry Time Changed"",
        ""Account Locked Changed"",
        ""Account Password Changed"",
        ""Account Password Expired"",
        ""Account Password Never Expires Changed"",
        ""Account Password Not Required Changed"",
        ""Account Smartcard Required Changed"",
        ""Account Supported Encryption Types Changed"",
        ""Account Unlock changed"",
        ""Account UPN Name Changed"",
        ""Group Membership Changed"",
        ""User Mail Changed"",
        ""User Account Created"",
        ""Computer Account Created"",
        ""Security Principal Deleted Changed"",
        ""Security Principal Display Name Changed"",
        ""Security Principal Name Changed"",
        ""Security Principal Path Changed"",
        ""Security Principal Sam Name Changed""
    ]);
IdentityDirectoryEvents
| where TimeGenerated > ago(90d)
| where ActionType has_any (ADAttributeChanges)
| distinct TimeGenerated, ActionType, Application, TargetAccountUpn, TargetAccountDisplayName, TargetDeviceName, tostring(AdditionalFields)
| sort by TimeGenerated desc
| take 1000","//capturing attribute changes based off MDI actiontypes, all attributes. 
let ADAttributeChanges = 
    dynamic([
        ""Account Constrained Delegation State Changed"",
        ""Account Constrained Delegation SPNs Changed"",
        ""Account Delegation Changed"",
        ""Account Disabled Changed"",
        ""Account Expired"",
        ""Account Expiry Time Changed"",
        ""Account Locked Changed"",
        ""Account Password Changed"",
        ""Account Password Expired"",
        ""Account Password Never Expires Changed"",
        ""Account Password Not Required Changed"",
        ""Account Smartcard Required Changed"",
        ""Account Supported Encryption Types Changed"",
        ""Account Unlock changed"",
        ""Account UPN Name Changed"",
        ""Group Membership Changed"",
        ""User Mail Changed"",
        ""User Account Created"",
        ""Computer Account Created"",
        ""Security Principal Deleted Changed"",
        ""Security Principal Display Name Changed"",
        ""Security Principal Name Changed"",
        ""Security Principal Path Changed"",
        ""Security Principal Sam Name Changed""
    ]);
IdentityDirectoryEvents
| where Timestamp > ago(30d)
| where ActionType has_any (ADAttributeChanges)
| distinct Timestamp, ActionType, Application, TargetAccountUpn, TargetAccountDisplayName, TargetDeviceName, tostring(AdditionalFields)
| sort by Timestamp desc
| take 1000"
EL0,01,CG,02,,Identity,Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Windows,SecurityEvent,Activity,5136(S): A directory service object was modified,https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-5136,"SecurityEvent //This event documents modifications to AD objects, identifying the object, user, attribute modified, the new value of the attribute if applicable and the operation performed. 
| extend d = parse_xml(EventData)
| extend EventDataParsed = parse_json(tostring(d.EventData))
| mv-expand DataItem = EventDataParsed.Data
| where TimeGenerated > ago(90d)
| where EventID == 5136
| where Activity == ""5136 - A directory service object was modified.""
| distinct TimeGenerated, Name = tostring(DataItem[""@Name""]), Value = tostring(DataItem[""#text""]), Activity, Source = ""SecurityEvent""
| summarize 
    InitiatedBy = anyif(Value, Name == ""SubjectUserName""),
    TargetUserName = anyif(Value, Name == ""ObjectDN""),
    ['Object Class'] = anyif(Value, Name == ""ObjectClass""),
    ['Attributes'] = make_list_if(Value, Name contains ""Attribute"")
    by TimeGenerated, Activity
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,CH,06,,Identity,Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Microsoft Defender for Endpoint,DeviceEvents,ActionType,user,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDE,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-deviceevents-table,"DeviceEvents //establish/manage org and groups/roles
| where TimeGenerated > ago(90d)
| where ActionType contains ""user""
| distinct TimeGenerated, ActionType, ['Initiated By'] = InitiatingProcessAccountName, DeviceName, AccountDomain, AccountName, tostring(AdditionalFields)
| sort by TimeGenerated desc
| take 1000","DeviceEvents //establish/manage org and groups/roles
| where Timestamp > ago(30d)
| where ActionType contains ""user""
| distinct Timestamp, ActionType, ['Initiated By'] = InitiatingProcessAccountName, DeviceName, AccountDomain, AccountName, tostring(AdditionalFields)
| sort by Timestamp desc
| take 1000"
EL0,01,CI,02,,Identity,Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Windows,SecurityEvent,Activity,4738(S): A user account was changed,https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4738,"SecurityEvent //review reference to dictact what was changed, more so who did so to what account
| where TimeGenerated > ago(90d)
| where EventID == 4738
| where Activity == ""4738 - A user account was changed.""
| distinct TimeGenerated, Activity, ['Initiated By'] = SubjectUserName, TargetUserName
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,EA,02,,Identity,Identity & Credential Management,Track Usage,Credential Usage,Windows,SecurityEvent,Activity,"4768(S, F): A Kerberos authentication ticket (TGT) was requested",https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4768,"SecurityEvent //This event is logged on domain controllers only and both success and failure instances of this event are logged.
| extend d = parse_xml(EventData)
| extend EventDataParsed = parse_json(tostring(d.EventData))
| mv-expand DataItem = EventDataParsed.Data
| where TimeGenerated >= ago(90d)
| where EventID == 4768
| where Activity == ""4768 - A Kerberos authentication ticket (TGT) was requested.""
| distinct TimeGenerated, Name = tostring(DataItem[""@Name""]), Value = tostring(DataItem[""#text""]), Activity, Source = ""SecurityEvent""
| summarize 
    User = anyif(Value, Name == ""TargetUserName""),
    CertIssuerName = anyif(Value, Name == ""CertIssuerName""), 
    CertSerialNumber = anyif(Value, Name == ""CertSerialNumber""), 
    CertThumbprint = anyif(Value, Name == ""CertThumbprint"") 
    by TimeGenerated, Source, Activity
| where isnotempty(CertIssuerName) and isnotempty(CertSerialNumber) and isnotempty(CertThumbprint)
| where User !contains ""$"" //comment out to see machines
| sort by TimeGenerated desc",NA
EL0,01,EB,01,,Identity,Identity & Credential Management,Track Usage,Credential Usage,Entra,SigninLogs,AuthenticationDetails,AuthenticationDetails,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-sign-in-log-activity-details#authentication-details,"SigninLogs //Interactive user sign-ins are sign-ins that require the user to supply an authentication factor
| where TimeGenerated > ago(90d)
| mv-expand todynamic(AuthenticationDetails)
| extend AuthMethod = tostring(AuthenticationDetails.authenticationMethod)
| where AuthMethod <> ""Previously satisfied""
| where isnotempty(AuthMethod)
| distinct TimeGenerated, UserPrincipalName, AuthMethod, Category, AppDisplayName
| summarize count() by TimeGenerated, AuthMethod, UserPrincipalName, AppDisplayName
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,EC,01,,Identity,Identity & Credential Management,Track Usage,Credential Usage,Entra,AADNonInteractiveUserSignInLogs,AuthenticationDetails,AuthenticationDetails,"https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs

https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md",https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-noninteractive-sign-ins,"AADNonInteractiveUserSignInLogs //Non-interactive user sign-ins are sign-ins that were performed by a client app or an OS component on behalf of a user
| where TimeGenerated > ago(90d)
| mv-expand todynamic(AuthenticationDetails)
| extend AuthMethod = tostring(AuthenticationDetails.authenticationMethod)
| where isnotempty(AuthMethod)
| distinct TimeGenerated, UserPrincipalName, AuthMethod, Category, AppDisplayName
| summarize count() by TimeGenerated, UserPrincipalName, AppDisplayName
| sort by TimeGenerated desc 
| take 1000",NA
EL0,01,ED,01,,Identity,Identity & Credential Management,Track Usage,Credential Usage,Entra,AADServicePrincipalSignInLogs,OperationName ,Sign-in activity,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-service-principal-sign-ins,"AADServicePrincipalSignInLogs //SP sign-in activity
| where TimeGenerated > ago(90d)
| where OperationName == ""Sign-in activity""
| distinct TimeGenerated, ServicePrincipalName, AppId, ResultType, ResultDescription
| summarize count() by TimeGenerated, ServicePrincipalName, AppId, ResultType
| sort by TimeGenerated desc  
| take 1000",NA
EL0,01,EE,01,,Identity,Identity & Credential Management,Track Usage,Credential Usage,Entra,ManagedIdentitySigninlogs,OperationName ,Sign-in activity,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-managed-identity-sign-ins,"AADManagedIdentitySignInLogs //Managed Identity sign-in activity
| where TimeGenerated > ago(90d)
| where OperationName == ""Sign-in activity""
| distinct TimeGenerated, ['Managed Identity'] = ServicePrincipalName, AppId
| summarize count() by TimeGenerated, ['Managed Identity'] , AppId
| sort by TimeGenerated desc 
| take 1000",NA
EL0,01,EF,01,,Identity,Identity & Credential Management,Track Usage,Credential Usage,Entra,ADFSSignInLogs,OperationName ,Sign-in activity,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/troubleshoot/entra/entra-id/ad-dmn-services/understand-ad-fs-sign-in-events-azure-ad-connect-health,"ADFSSignInLogs
| where TimeGenerated > ago(90d)
| where OperationName == ""Sign-in activity""
| distinct TimeGenerated, UserPrincipalName, ResourceIdentity, Requirement, AuthenticationDetails, AuthenticationProcessingDetails
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,EG,01,,Identity,Identity & Credential Management,Track Usage,Credential Usage,Entra,AADUserRiskEvents,OperationName,User Risk Detection,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/id-protection/howto-identity-protection-investigate-risk,"// Extend the columns and calculate the time delta between the sign in event and the risk event, for real time that is obviously going to be quick, but for offline you can find out how long it took for the risk to be flagged. Also tracking usage of Authentication Details
let signin=
SigninLogs
| where TimeGenerated > ago(90d)
| extend SigninTime = TimeGenerated
| where RiskEventTypes_V2 != ""[]"";
AADUserRiskEvents //AADUserRiskEvents – this is the data that you would see in Azure AD Identity Protection if you went and viewed the risk detections, or risky sign-in reports
| where TimeGenerated > ago(90d)
| where OperationName == ""User Risk Detection""
| join kind=inner signin on CorrelationId
| extend RiskTime = TimeGenerated
| extend TimeDelta = abs(SigninTime - RiskTime)
| distinct TimeGenerated, UserPrincipalName, AppDisplayName, DetectionTimingType, SigninTime, RiskTime, TimeDelta, RiskEventType, RiskLevelDuringSignIn, Source, RiskDetail, RiskState, AuthenticationDetails
// comment out line 11/12 to see all RiskStates
| where RiskState <> ""remediated""
| where RiskState <> ""dismissed""
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,EH,01,,Identity,Identity & Credential Management,Track Usage,Credential Usage,Entra,AADRiskyUsers,RiskState,dismissed,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/id-protection/howto-identity-protection-investigate-risk,"let riskyevent=
SigninLogs
| where TimeGenerated > ago(90d)
| extend SigninTime = TimeGenerated
| where RiskEventTypes_V2 != ""[]""
| join kind=inner (
AADUserRiskEvents //AADUserRiskEvents – this is the data that you would see in Azure AD Identity Protection if you went and viewed the risk detections, or risky sign-in reports
| where TimeGenerated > ago(90d)
| extend RiskTime = TimeGenerated
) on CorrelationId
| distinct TimeGenerated, UserPrincipalName, DetectionTimingType, RiskLevelDuringSignIn, Location, IPAddress, AuthenticationDetails;
AADRiskyUsers //AADRiskyUsers – this is the data from the Risky Users blade in Azure AD Identity Protection but streamed as log data, so will include when users are remediated.
| summarize arg_max(TimeGenerated, *) by UserPrincipalName
| join kind=inner riskyevent on UserPrincipalName
| where RiskState contains 'dismissed'  //shows the state of a user if remediated, remove to see all
| distinct TimeGenerated, UserPrincipalName, DetectionTimingType, RiskLevelDuringSignIn, RiskState, Location, IPAddress, AuthenticationDetails
| sort by TimeGenerated desc 
| take 1000",NA
EL0,01,EI,01,,Identity,Identity & Credential Management,Track Usage,Credential Usage,Entra,AADServicePrincipalRiskEvents,Type,AADServicePrincipalRiskEvents,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/id-protection/howto-identity-protection-investigate-risk,"// Extend the columns and calculate the time delta between the sign in event and the risk event, for real time that is obviously going to be quick, but for offline you can find out how long it took for the risk to be flagged. Also tracking usage of Authentication Details
let spsignin=
AADServicePrincipalSignInLogs
| extend SigninTime = TimeGenerated
| where TimeGenerated > ago(90d);
AADServicePrincipalRiskEvents //AADServicePrincipalRiskEvents – this is the data that you would see in Azure AD Identity Protection if you went and viewed the risk detections, or risky sign-in reports
| where TimeGenerated > ago(90d)
| join kind=inner spsignin on AppId
| extend RiskTime = TimeGenerated
| extend TimeDelta = abs(SigninTime - RiskTime)
| distinct TimeGenerated, ServicePrincipalName, DetectionTimingType, SigninTime, RiskTime, TimeDelta, RiskEventType, Source, RiskDetail, RiskState, ConditionalAccessPolicies
// comment out line 11/12 to see all RiskStates
| where RiskState <> ""remediated""
| where RiskState <> ""dismissed""
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,EJ,01,,Identity,Identity & Credential Management,Track Usage,Credential Usage,Entra,AADRiskyServicePrincipals,RiskState,dismissed,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/id-protection/howto-identity-protection-investigate-risk,"let spsignin=
AADServicePrincipalSignInLogs
| extend SigninTime = TimeGenerated
| where TimeGenerated > ago(90d)
| join kind=inner (
AADServicePrincipalRiskEvents
| where Type == 'AADServicePrincipalRiskEvents'
| where TimeGenerated > ago(90d)
) on AppId;
AADRiskyServicePrincipals
| join kind=inner spsignin on AppId
| summarize arg_max(TimeGenerated, *) by AppId
| where RiskState contains 'dismissed'  //shows the state of the sp if remediated, remove to see all
| distinct TimeGenerated, AppId, ServicePrincipalName, DetectionTimingType, SigninTime, RiskEventType, RiskLevel, Source, RiskDetail, RiskState, ConditionalAccessPolicies
| sort by TimeGenerated desc 
| take 1000",NA
EL0,01,EK,07,,Identity,Identity & Credential Management,Track Usage,Credential Usage,Microsoft Defender for Identity,IdentityLogonEvents,AccountName,(acctlist),https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-identitylogonevents-table,"let acctlist = dynamic([""useracctname""]); //use inline with where accountupn acctlist //track user and spn
IdentityLogonEvents
| where TimeGenerated > ago(90d)
| where AccountName in~ (acctlist) //edit to verify your svc creations
//| where AccountName == 'useracctname' //edit your svc acct
| distinct TimeGenerated, AccountName, LogonType, ActionType, Application
| sort by TimeGenerated desc
| take 1000","let acctlist = dynamic([""useracctname""]); //use inline with where accountupn acctlist //track user and spn
IdentityLogonEvents
| where Timestamp > ago(30d)
| where AccountName in~ (acctlist) //edit to verify your svc creations
//| where AccountName == 'useracctname' //edit your svc acct
| distinct Timestamp, AccountName, LogonType, ActionType, Application
| sort by Timestamp desc
| take 1000"
EL0,01,FA,01,,Identity,Identity & Credential Management,Account,Account Deletion,Entra,AuditLogs,OperationName ,Delete user,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-audit-logs,"AuditLogs //audit deleted user by service, app or user
| where TimeGenerated > ago(90d)
| where OperationName == 'Delete user'
| extend InitiatedBySync = iif(tostring(InitiatedBy.user.userPrincipalName) !has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| extend InitiatedByUser = iif(tostring(InitiatedBy.user.userPrincipalName) has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| distinct TimeGenerated,    
            OperationName,   
            ['Service'] = Identity,      
            ['InitiatedByApp'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), 
            ['InitiatedBySync'], 
            ['InitiatedByUser'], 
            Result,
            ['Target-Resource'] = tostring(TargetResources)            
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,FB,01,,Identity,Identity & Credential Management,Account,Account Deletion,Entra,MicrosoftGraphActivityLogs,RequestMethod,DELETE,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/graph/api/resources/users,"MicrosoftGraphActivityLogs //View POST (Success/Failures) methods on delete user
| where TimeGenerated > ago(90d)
| where RequestMethod == 'POST'
| where RequestUri has '/users' //Captures /beta and /v1.0
| join (
    AuditLogs
    | extend Id = tostring(parse_json(tostring(InitiatedBy.user)).id)
) on $left.UserId == $right.Id
| where Result == ""success""
| where OperationName == ""Delete user""
| distinct ActivityDateTime, RequestUri, ['Service'] = Identity, ['InitiatedByApp'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), ['InitiatedByUser'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), OperationName, Result, ['Target-Resource'] = tostring(TargetResources)
| sort by ActivityDateTime desc
| take 1000",NA
EL0,01,FC,07,,Identity,Identity & Credential Management,Account,Account Deletion,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType,Account Deleted changed,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-identitydirectoryevents-table,"IdentityDirectoryEvents //view deleted user, group and device via Microsoft Defender for Identity
| where TimeGenerated > ago(90d)
| where ActionType == ""Account Deleted changed""
| where Application == ""Active Directory""
| extend TARGET_OBJECT_DEVICE_ = tostring(AdditionalFields.[""TARGET_OBJECT.DEVICE""])
| extend TARGET_OBJECT_GROUP_ = tostring(AdditionalFields.[""TARGET_OBJECT.GROUP""])
| extend TARGET_OBJECT_USER_ = tostring(AdditionalFields.[""TARGET_OBJECT.USER""])
| distinct TimeGenerated, ActionType, Application, TARGET_OBJECT_USER_, TARGET_OBJECT_GROUP_, TARGET_OBJECT_DEVICE_
| sort by TimeGenerated desc
| take 1000","IdentityDirectoryEvents //view deleted user, group and device via Microsoft Defender for Identity
| where Timestamp > ago(30d)
| where ActionType == ""Account Deleted changed""
| where Application == ""Active Directory""
| extend TARGET_OBJECT_DEVICE_ = tostring(AdditionalFields.[""TARGET_OBJECT.DEVICE""])
| extend TARGET_OBJECT_GROUP_ = tostring(AdditionalFields.[""TARGET_OBJECT.GROUP""])
| extend TARGET_OBJECT_USER_ = tostring(AdditionalFields.[""TARGET_OBJECT.USER""])
| distinct Timestamp, ActionType, Application, TARGET_OBJECT_USER_, TARGET_OBJECT_GROUP_, TARGET_OBJECT_DEVICE_
| sort by Timestamp desc
| take 1000"
EL0,01,FD,01,,Identity,Identity & Credential Management,Account,Account Deletion,Entra,AADProvisioningLogs,Action ,Delete,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-provisioning-logs#what-can-you-do-with-the-provisioning-logs,"AADProvisioningLogs //deletion is shown by any type service principal using SCIM
| where TimeGenerated > ago(90d)
| where ProvisioningAction == ""delete"" 
| extend ['Service'] = tostring(parse_json(InitiatedBy).Name)
| extend ['InitiatedByApp'] = tostring(parse_json(ServicePrincipal).Name)
| distinct TimeGenerated, ['Service'], ['InitiatedByApp'], OperationName, ResultType, ModifiedProperties
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,FE,02,,Identity,Identity & Credential Management,Account,Account Deletion,Windows,SecurityEvent,Activity,4726(S): A user account was deleted,https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4726,"SecurityEvent
| extend d = parse_xml(EventData)
| extend EventDataParsed = parse_json(tostring(d.EventData))
| mv-expand DataItem = EventDataParsed.Data
| where TimeGenerated > ago(90d)
| where EventID == 4726
| where Activity == ""4726 - A user account was deleted.""
| distinct TimeGenerated, Name = tostring(DataItem[""@Name""]), Value = tostring(DataItem[""#text""]), Activity, Source = ""SecurityEvent""
| summarize 
    InitiatedBy = anyif(Value, Name == ""SubjectUserName""),
    TargetUserName = anyif(Value, Name == ""TargetUserName""),
    DisplayName = anyif(Value, Name == ""DisplayName"")
    by TimeGenerated, Source, Activity
    | sort by TimeGenerated desc  
    | take 1000",NA
EL0,01,FF,06,,Identity,Identity & Credential Management,Account,Account Deletion,Microsoft Defender for Endpoint,DeviceEvents,ActionType,UserAccountDeleted,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDE,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-deviceevents-table,"DeviceEvents //establish/manage org and groups/roles
| where TimeGenerated > ago(90d)
| where ActionType == ""UserAccountDeleted""
| distinct TimeGenerated, ActionType, ['Initiated By'] = InitiatingProcessAccountName, DeviceName, AccountDomain, AccountName, tostring(AdditionalFields)
| sort by TimeGenerated desc
| take 1000","DeviceEvents //establish/manage org and groups/roles
| where Timestamp > ago(30d)
| where ActionType == ""UserAccountDeleted""
| distinct Timestamp, ActionType, ['Initiated By'] = InitiatingProcessAccountName, DeviceName, AccountDomain, AccountName, tostring(AdditionalFields)
| sort by Timestamp desc
| take 1000"
EL0,01,GA,01,,Identity,Privileged Identity & Credential Management,Account,Provisioning,Entra,AuditLogs,OperationName,to role,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-audit-logs,"AuditLogs //View privileged provisioning by user or service to role mgmt and status of eligibiltiy by result
| where TimeGenerated > ago(90d)
| where OperationName contains 'to role'
| extend ['Initiated By User'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| extend ['Initiated By Service'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName)
| distinct TimeGenerated, ['Initiated By User'], ['Initiated By Service'], OperationName, Category, AADOperationType, tostring(TargetResources)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,GB,01,,Identity,Privileged Identity & Credential Management,Account,Provisioning,Entra,MicrosoftGraphActivityLogs,OperationName,to role,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/graph/api/resources/intune-rbac-roleassignment?view=graph-rest-1.0,"MicrosoftGraphActivityLogs  //View POST privileged provisioning by user or service to role mgmt and status of eligibiltiy by result
| where TimeGenerated > ago(90d)
| where RequestMethod == 'POST'
| where RequestUri has '/roleManagement/directory/roleAssignments' //Captures /beta and /v1.0
| join ( AuditLogs
| extend id_ = tostring(parse_json(tostring(InitiatedBy.user)).id)
)
on $left.UserId == $right.id_
| where OperationName contains 'to role'
| project ActivityDateTime, RequestUri, ['Initiated By Service'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), ['Initiated By User'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), OperationName, Result, ['Target-Resource'] = tostring(TargetResources)
| sort by ActivityDateTime desc
| take 1000",NA
EL0,01,GC,07,,Identity,Privileged Identity & Credential Management,Account,Provisioning,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType,Group membership changed,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI#connect-events,https://techcommunity.microsoft.com/blog/microsoftsecurityandcompliance/track-changes-to-sensitive-groups-with-advanced-hunting-in-microsoft-365-defende/3275198,"let SensitiveGroupName = pack_array(  // Declare Sensitive Group names. Add any groups that you manually tagged as sensitive
    'Account Operators',
    'Administrators',
    'Domain Admins', 
    'Backup Operators',
    'Domain Controllers',
    'Enterprise Admins',
    'Enterprise Read-only Domain Controllers',
    'Group Policy Creator Owners',
    'Incoming Forest Trust Builders',
    'Microsoft Exchange Servers',
    'Network Configuration Operators',
    'Microsoft Exchange Servers',
    'Print Operators',
    'Read-only Domain Controllers',
    'Replicator',
    'Schema Admins',
    'Server Operators'
);
IdentityDirectoryEvents
| where TimeGenerated > ago(90d)
| where Application == ""Active Directory""
| where ActionType == ""Group Membership changed""
| where DestinationDeviceName != """" // Exclude activites coming AD Sync changes. 
| extend ToGroup = tostring(parse_json(AdditionalFields).[""TO.GROUP""]) // Extracts the group name if action is add enity to a group.
| extend FromGroup = tostring(parse_json(AdditionalFields).[""FROM.GROUP""]) // etracts the group name if action is remove entity from a group.
| extend Action = iff(isempty(ToGroup), ""Remove"", ""Add"") // calculates if the action is Remove or Add
| extend GroupModified = iff(isempty(ToGroup), FromGroup, ToGroup) // group name that the action was taken on
| extend Target_Group = tostring(parse_json(AdditionalFields).[""TARGET_OBJECT.GROUP""])
| where GroupModified in~ (SensitiveGroupName)
| where Action == 'Add' //provisioning
| project TimeGenerated, Action, GroupModified,  Target_Account = TargetAccountDisplayName, Target_UPN = TargetAccountUpn, Target_Group,  DC=DestinationDeviceName, Actor=AccountName, ActorDomain=AccountDomain, AdditionalFields
| sort by TimeGenerated desc
| take 1000","let SensitiveGroupName = pack_array(  // Declare Sensitive Group names. Add any groups that you manually tagged as sensitive
    'Account Operators',
    'Administrators',
    'Domain Admins', 
    'Backup Operators',
    'Domain Controllers',
    'Enterprise Admins',
    'Enterprise Read-only Domain Controllers',
    'Group Policy Creator Owners',
    'Incoming Forest Trust Builders',
    'Microsoft Exchange Servers',
    'Network Configuration Operators',
    'Microsoft Exchange Servers',
    'Print Operators',
    'Read-only Domain Controllers',
    'Replicator',
    'Schema Admins',
    'Server Operators'
);
IdentityDirectoryEvents
| where Timestamp > ago(30d)
| where Application == ""Active Directory""
| where ActionType == ""Group Membership changed""
| where DestinationDeviceName != """" // Exclude activites coming AD Sync changes. 
| extend ToGroup = tostring(parse_json(AdditionalFields).[""TO.GROUP""]) // Extracts the group name if action is add enity to a group.
| extend FromGroup = tostring(parse_json(AdditionalFields).[""FROM.GROUP""]) // etracts the group name if action is remove entity from a group.
| extend Action = iff(isempty(ToGroup), ""Remove"", ""Add"") // calculates if the action is Remove or Add
| extend GroupModified = iff(isempty(ToGroup), FromGroup, ToGroup) // group name that the action was taken on
| extend Target_Group = tostring(parse_json(AdditionalFields).[""TARGET_OBJECT.GROUP""])
| where GroupModified in~ (SensitiveGroupName)
| where Action == 'Add' //provisioning
| project Timestamp, Action, GroupModified,  Target_Account = TargetAccountDisplayName, Target_UPN = TargetAccountUpn, Target_Group,  DC=DestinationDeviceName, Actor=AccountName, ActorDomain=AccountDomain, AdditionalFields
| sort by Timestamp desc
| take 1000"
EL0,01,GD,06,,Identity,Privileged Identity & Credential Management,Account,Provisioning,Microsoft Defender for Endpoint,DeviceEvents,ActionType,UseraccountAddedToLocalGroup,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDE#connect-events,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-deviceevents-table,"let SensitiveGroupName = pack_array(  // Declare Sensitive Group names. Add any groups that you manually tagged as sensitive
    'Account Operators',
    'Administrators',
    'Domain Admins', 
    'Backup Operators',
    'Domain Controllers',
    'Enterprise Admins',
    'Enterprise Read-only Domain Controllers',
    'Group Policy Creator Owners',
    'Incoming Forest Trust Builders',
    'Microsoft Exchange Servers',
    'Network Configuration Operators',
    'Microsoft Exchange Servers',
    'Print Operators',
    'Read-only Domain Controllers',
    'Replicator',
    'Schema Admins',
    'Server Operators'
);
DeviceEvents
| where TimeGenerated > ago(90d)
| where ActionType contains ""UserAccountAddedToLocalGroup""
| extend Fields = parse_json(AdditionalFields)
| extend AddToGroup = tostring(Fields.GroupName)
| extend GroupDomainName = tostring(Fields.GroupDomainName)
| where AddToGroup in (SensitiveGroupName)  // Check if the user was added to any of the sensitive groups
| join kind=inner (
    DeviceEvents
    | where ActionType contains ""UserAccountCreated""
    | where AccountName <> """"
    | distinct AccountName, AccountSid
) on AccountSid
| extend InitiatedActor = strcat(InitiatingProcessAccountDomain, ""\\"", InitiatingProcessAccountName)
| distinct TimeGenerated, DeviceName, ActionType, InitiatedActor, AccountAdded = AccountName1, AddToGroup, GroupDomainName
| sort by TimeGenerated desc 
| take 1000","let SensitiveGroupName = pack_array(  // Declare Sensitive Group names. Add any groups that you manually tagged as sensitive
    'Account Operators',
    'Administrators',
    'Domain Admins', 
    'Backup Operators',
    'Domain Controllers',
    'Enterprise Admins',
    'Enterprise Read-only Domain Controllers',
    'Group Policy Creator Owners',
    'Incoming Forest Trust Builders',
    'Microsoft Exchange Servers',
    'Network Configuration Operators',
    'Microsoft Exchange Servers',
    'Print Operators',
    'Read-only Domain Controllers',
    'Replicator',
    'Schema Admins',
    'Server Operators'
);
DeviceEvents
| where Timestamp > ago(30d)
| where ActionType contains ""UserAccountAddedToLocalGroup""
| extend Fields = parse_json(AdditionalFields)
| extend AddToGroup = tostring(Fields.GroupName)
| extend GroupDomainName = tostring(Fields.GroupDomainName)
| where AddToGroup in (SensitiveGroupName)  // Check if the user was added to any of the sensitive groups
| join kind=inner (
    DeviceEvents
    | where ActionType contains ""UserAccountCreated""
    | where AccountName <> """"
    | distinct AccountName, AccountSid
) on AccountSid
| extend InitiatedActor = strcat(InitiatingProcessAccountDomain, ""\\"", InitiatingProcessAccountName)
| distinct Timestamp, DeviceName, ActionType, InitiatedActor, AccountAdded = AccountName1, AddToGroup, GroupDomainName
| sort by Timestamp desc 
| take 1000"
EL0,01,HA,01,,Identity,Privileged Identity & Credential Management,Manage Credential Type,Credential Management,Entra,AuditLogs,OperationName,conditional access policy,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/conditional-access/troubleshoot-policy-changes-audit-log,"AuditLogs //Focused on leveraging AuthN Context, which could be in flow with/for priv accounts. Reviewing CRUD for Conditional Access policies. NonHumanActor represents a SP doing the CRUD of the CA
| where TimeGenerated > ago(90d)
| where OperationName contains (""conditional access policy"")
| where parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)).conditions)).applications)).includeAuthenticationContextClassReferences))[0] contains '' or parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].oldValue)).conditions)).applications)).includeAuthenticationContextClassReferences))[0] contains ''
| extend ['New AuthN Context'] = tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)).conditions)).applications)).includeAuthenticationContextClassReferences))[0])
//| extend AuthNName = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue)).displayName)
| extend ['Old AuthN Context'] = tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].oldValue)).conditions)).applications)).includeAuthenticationContextClassReferences))[0])
| extend ['CA Policy Name'] = tostring(TargetResources[0].displayName)
| extend ['Initiated By'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| distinct TimeGenerated, ['Initiated By'], ['CA Policy Name'], ['New AuthN Context'], ['Old AuthN Context'], ActivityDisplayName, Result
| sort by TimeGenerated desc 
| take 1000",NA
EL0,01,HB,07,,Identity,Privileged Identity & Credential Management,Manage Credential Type,Cert,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType,ADCS Certificate issuance,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI#connect-events,https://techcommunity.microsoft.com/blog/microsoftthreatprotectionblog/securing-ad-cs-microsoft-defender-for-identitys-sensor-unveiled/3980265,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Principal Name']); //In lieu of EventID 4887
IdentityDirectoryEvents //Review Issuing Certificate Issuance to Privileged Users; UPN/DisplayName w/ Issuing-CA/SKI
| where TimeGenerated > ago(90d)
| where ActionType == ""ADCS Certificate issuance""
| where AccountUpn in (PrivUsers) 
| distinct TimeGenerated, ['Issued-UPN'] = AccountUpn, ['Issued-DisplayName'] = AccountDisplayName, ['Issuing-CA'] = DestinationDeviceName, ['Issued SubjectKeyIdentifier'] = tostring(AdditionalFields.SubjectKeyIdentifier)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,HC,01,,Identity,Privileged Identity & Credential Management,Manage Credential Type,MFA,Entra,AuditLogs,OperationName,Update role setting in PIM,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/id-governance/privileged-identity-management/pim-how-to-change-default-settings,"AuditLogs
| where TimeGenerated > ago(90d)
| where OperationName == ""Update role setting in PIM""
| where ResultDescription contains ""MFA"" //when MFA settings are changed on PIM role or PIM group
| extend ['Initiated By'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| extend ['PIM Group Updated'] = case(
                        tostring(TargetResources[2].type) == 'Other',
                        tostring(TargetResources[2].displayName),
                        ''
                     )
| extend ['PIM Role Updated']= case(
                        tostring(TargetResources[2].type) == 'Directory',
                        tostring(TargetResources[0].displayName),
                        ''
                     )
| distinct TimeGenerated, OperationName, ResultDescription, ['Initiated By'], ['PIM Group Updated'], ['PIM Role Updated'], LoggedByService, Result
| sort by TimeGenerated desc 
| take 1000",NA
EL0,01,HD,01,,Identity,Privileged Identity & Credential Management,Manage Credential Type,Authentication Context,Entra,AuditLogs,OperationName,Update role setting in PIM,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://techcommunity.microsoft.com/blog/coreinfrastructureandsecurityblog/enhancing-security-with-entra-pim-and-conditional-access-policy-using-authentica/4368002,"AuditLogs
| where TimeGenerated > ago(90d)
| where OperationName == ""Update role setting in PIM""
| where ResultDescription contains ""ACRS"" //when authN context is enabled/disabled on PIM role or PIM group
| extend ['Initiated By'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| extend ['PIM Group Updated'] = case(
                        tostring(TargetResources[2].type) == 'Other',
                        tostring(TargetResources[2].displayName),
                        ''
                     )
| extend ['PIM Role Updated']= case(
                        tostring(TargetResources[2].type) == 'Directory',
                        tostring(TargetResources[0].displayName),
                        ''
                     )
| sort by TimeGenerated desc 
| take 1000
",NA
EL0,01,HE,02,,Identity,Privileged Identity & Credential Management,Manage Credential Type,Password,Windows,SecurityEvent,Activity,"4723(S, F): An attempt was made to change an account's password",https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4723,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Identifier']); //This event does not pull UPN, focus on friendlyname
SecurityEvent
| extend d = parse_xml(EventData)
| extend EventDataParsed = parse_json(tostring(d.EventData))
| mv-expand DataItem = EventDataParsed.Data
| where TimeGenerated > ago(90d)
| where EventID == 4723  // Filtering by EventID 4723(S, F): An attempt was made to change an account's password
| where Activity == ""4723 - An attempt was made to change an account\'s password.""
| extend Name = tostring(DataItem[""@Name""])
| extend Value = tostring(DataItem[""#text""])
| summarize InitiatedBy = anyif(Value, Name == ""SubjectUserName""),
    TargetUserName = anyif(Value, Name == ""TargetUserName""),
    DisplayName = anyif(Value, Name == ""DisplayName"") by TimeGenerated, Activity
    | where TargetUserName in (PrivUsers)
    | sort by TimeGenerated desc
    | take 1000",NA
EL0,01,HF,02,,Identity,Privileged Identity & Credential Management,Manage Credential Type,Password,Windows,SecurityEvent,Activity,"4724(S, F): An attempt was made to reset an account's password",https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4724,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Identifier']); //This event does not pull UPN, focus on friendlyname
SecurityEvent
| extend d = parse_xml(EventData)
| extend EventDataParsed = parse_json(tostring(d.EventData))
| mv-expand DataItem = EventDataParsed.Data
| where TimeGenerated > ago(90d)
| where EventID == 4724 
| where Activity == ""4724 - An attempt was made to reset an account\'s password.""
| extend Name = tostring(DataItem[""@Name""])
| extend Value = tostring(DataItem[""#text""])
| summarize InitiatedBy = anyif(Value, Name == ""SubjectUserName""),
    TargetUserName = anyif(Value, Name == ""TargetUserName""),
    DisplayName = anyif(Value, Name == ""DisplayName"") by TimeGenerated, Activity
    | where TargetUserName in (PrivUsers)
    | sort by TimeGenerated desc
    | take 1000",NA
EL0,01,HG,07,,Identity,Privileged Identity & Credential Management,Manage Credential Type,Password,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType ,Account Password Change,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI#connect-events,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-identitydirectoryevents-table,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Principal Name']); //track priv users pwd changes
IdentityDirectoryEvents
| where TimeGenerated > ago(90d)
| where ActionType == ""Account Password changed"" //tracks both targetupn and targetdevicename
| where TargetAccountUpn in (PrivUsers)
| distinct TimeGenerated, ActionType, TargetDeviceName, TargetAccountUpn, TargetAccountDisplayName, tostring(AdditionalFields)
| sort by TimeGenerated desc 
| take 1000",NA
EL0,01,I,01,,Identity,Privileged Identity & Credential Management,Attributes,Establish/Manage: Organization & Groups/Roles,Entra,AuditLogs,TargetResources,Attribute Value,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/defender-for-identity/monitored-activities#monitored-user-activities-user-account-ad-attribute-changes,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Principal Name']); //watchlist for priv users
AuditLogs //review modified properties (attributes) from users, service, sync and scim 
| where TimeGenerated > ago(90d)
| extend x = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].displayName)
| extend [""Attribute Value""] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0])
| extend Target = tostring(TargetResources[0].userPrincipalName)
| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| parse x with * '.' ['Attribute Set Name'] ""_"" *
| extend [""Attribute Name""]=split(x, ""_"")[1]
| extend InitiatedBySync = iif(tostring(InitiatedBy.user.userPrincipalName) !has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| extend InitiatedByUser = iif(tostring(InitiatedBy.user.userPrincipalName) has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| where InitiatedByUser in (PrivUsers)
| distinct TimeGenerated,       
           ['InitiatedByApp'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), 
            ['InitiatedBySync'], 
            ['InitiatedByUser'], 
            Result,
            ['Target-Resource'] = tostring(TargetResources)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,I,07,,Identity,Privileged Identity & Credential Management,Attributes,Establish/Manage: Organization & Groups/Roles,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType,ADAttributeChanges,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI#connect-events,https://learn.microsoft.com/en-us/defender-for-identity/monitored-activities#monitored-user-activities-user-account-ad-attribute-changes,"//capturing attribute changes based off MDI actiontypes, user attributes. See windows event logs (EVENTID 5136) for extended attribute changes.
let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Principal Name']); //watchlist for priv users
let ADAttributeChanges = 
    dynamic([
        ""Account Constrained Delegation State Changed"",
        ""Account Constrained Delegation SPNs Changed"",
        ""Account Delegation Changed"",
        ""Account Disabled Changed"",
        ""Account Expired"",
        ""Account Expiry Time Changed"",
        ""Account Locked Changed"",
        ""Account Password Changed"",
        ""Account Password Expired"",
        ""Account Password Never Expires Changed"",
        ""Account Password Not Required Changed"",
        ""Account Smartcard Required Changed"",
        ""Account Supported Encryption Types Changed"",
        ""Account Unlock changed"",
        ""Account UPN Name Changed"",
        ""Group Membership Changed"",
        ""User Mail Changed""
    ]);
IdentityDirectoryEvents
| where TimeGenerated > ago(90d)
| where ActionType has_any (ADAttributeChanges)
| where TargetAccountUpn in (PrivUsers)
| distinct TimeGenerated, ActionType, Application, TargetAccountUpn, TargetAccountDisplayName, TargetDeviceName, tostring(AdditionalFields)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,I,02,,Identity,Privileged Identity & Credential Management,Attributes,Establish/Manage: Organization & Groups/Roles,Windows,SecurityEvent,EventID,5137 - A directory service object was created,https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-5137,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Identifier']); //This event does not pull UPN, focus on friendlyname
SecurityEvent //This event documents creations of AD objects, identifying the object created and user what privileged user created what object
| extend d = parse_xml(EventData)
| extend EventDataParsed = parse_json(tostring(d.EventData))
| mv-expand DataItem = EventDataParsed.Data
| where TimeGenerated > ago(90d)
| where EventID == 5137
| where Activity == ""5137 - A directory service object was created.""
| distinct TimeGenerated, Name = tostring(DataItem[""@Name""]), Value = tostring(DataItem[""#text""]), Activity
| summarize 
    InitiatedBy = anyif(Value, Name == ""SubjectUserName""),
    Target = anyif(Value, Name == ""ObjectDN""),
    ['Object Class'] = anyif(Value, Name == ""ObjectClass""),
    ['Attributes'] = make_list_if(Value, Name contains ""Attribute"")
    by TimeGenerated, Activity
| where InitiatedBy in (PrivUsers)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,I,02,,Identity,Privileged Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Windows,SecurityEvent,EventID,5136(S): A directory service object was modified,https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-5136,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['ObjectDN']); //This event does not pull UPN, focus on friendlyname
SecurityEvent //This event documents modifications to AD objects, identifying the object, user, attribute modified, the new value of the attribute if applicable and the operation performed. 
| extend d = parse_xml(EventData)
| extend EventDataParsed = parse_json(tostring(d.EventData))
| mv-expand DataItem = EventDataParsed.Data
| where TimeGenerated > ago(90d)
| where EventID == 5136
| where Activity == ""5136 - A directory service object was modified.""
| distinct TimeGenerated, Name = tostring(DataItem[""@Name""]), Value = tostring(DataItem[""#text""]), Activity, Source = ""SecurityEvent""
| summarize 
    InitiatedBy = anyif(Value, Name == ""SubjectUserName""),
    TargetUserName = anyif(Value, Name == ""ObjectDN""),
    ['Object Class'] = anyif(Value, Name == ""ObjectClass""),
    ['Attributes'] = make_list_if(Value, Name contains ""Attribute"")
    by TimeGenerated, Activity
| sort by TimeGenerated desc
| where ['Object Class'] == ""user""
| where TargetUserName in (PrivUsers)
| take 1000",NA
EL0,01,I,01,,Identity,Privileged Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Entra,AuditLogs,OperationName ,Update user,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-audit-logs,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Principal Name']); //This event does not pull UPN, focus on friendlyname
AuditLogs //audit update user by service, app or user
| where TimeGenerated > ago(90d)
| where OperationName == 'Update user'
| extend InitiatedBySync = iif(tostring(InitiatedBy.user.userPrincipalName) !has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| extend InitiatedByUser = iif(tostring(InitiatedBy.user.userPrincipalName) has ""Sync"", """", tostring(InitiatedBy.user.userPrincipalName))
| extend PrivTarget = tostring(TargetResources[0].userPrincipalName)
| distinct TimeGenerated,       
            ['Service'] = Identity,      
            ['InitiatedByApp'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), 
            ['InitiatedBySync'], 
            ['InitiatedByUser'], 
            Result,
            PrivTarget,
            ['Target-Resource'] = tostring(TargetResources)
            | where PrivTarget in (PrivUsers)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,I,07,,Identity,Privileged Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType,ADAttributeChanges,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI#connect-events,https://learn.microsoft.com/en-us/defender-for-identity/monitored-activities#monitored-user-activities-user-account-ad-attribute-changes,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Principal Name']); //watchlist for priv users
//capturing attribute changes based off MDI actiontypes, all attributes. 
let ADAttributeChanges = 
    dynamic([
        ""Account Constrained Delegation State Changed"",
        ""Account Constrained Delegation SPNs Changed"",
        ""Account Delegation Changed"",
        ""Account Disabled Changed"",
        ""Account Expired"",
        ""Account Expiry Time Changed"",
        ""Account Locked Changed"",
        ""Account Password Changed"",
        ""Account Password Expired"",
        ""Account Password Never Expires Changed"",
        ""Account Password Not Required Changed"",
        ""Account Smartcard Required Changed"",
        ""Account Supported Encryption Types Changed"",
        ""Account Unlock changed"",
        ""Account UPN Name Changed"",
        ""Group Membership Changed"",
        ""User Mail Changed"",
        ""User Account Created"",
        ""Computer Account Created"",
        ""Security Principal Deleted Changed"",
        ""Security Principal Display Name Changed"",
        ""Security Principal Name Changed"",
        ""Security Principal Path Changed"",
        ""Security Principal Sam Name Changed""
    ]);
IdentityDirectoryEvents
| where TimeGenerated > ago(90d)
| where ActionType has_any (ADAttributeChanges)
| where TargetAccountUpn in (PrivUsers)
| distinct TimeGenerated, ActionType, Application, TargetAccountUpn, TargetAccountDisplayName, TargetDeviceName, tostring(AdditionalFields)
| sort by TimeGenerated desc",NA
EL0,01,I,06,,Identity,Privileged Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Microsoft Defender for Endpoint,DeviceEvents,ActionType,user,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDE#connect-events,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-deviceevents-table,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Identifier']); //watchlist for priv users
DeviceEvents //track changes in additional fields
| where TimeGenerated > ago(90d)
| where ActionType contains ""user""
| distinct TimeGenerated, ActionType, ['Initiated By'] = InitiatingProcessAccountName, DeviceName, AccountDomain, AccountName, tostring(AdditionalFields)
| where  AccountName in (PrivUsers)
| where isnotempty(AccountName)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,I,01,,Identity,Privileged Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Entra,AuditLogs,OperationName,Update Application,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"AuditLogs
| where TimeGenerated > ago(90d)
| where OperationName in (""Update application"", ""Update service principal"", ""Update application – Certificates and secrets management "")
| extend x = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].displayName)
| extend Action = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].displayName)
| extend value = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)
| extend oldvalue = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].oldValue)
| extend [""Attribute Value""] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0])
| extend Target = tostring(TargetResources[0].userPrincipalName)
| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| parse x with * '.' ['Attribute Set Name'] ""_"" *
| extend [""Attribute Name""] = split(x, ""_"")[1]
| extend InitiatedByUser = (tostring(InitiatedBy.user.userPrincipalName))
| extend AppDisplayName = tostring(TargetResources[0].displayName)
| extend AppId = tostring(TargetResources[0].id)
| extend DisplayName = strcat(AppDisplayName, "" ("", AppId, "")"")
| where InitiatedByUser != """"
| distinct  TimeGenerated, InitiatedByUser, DisplayName, OperationName, ['Target-Resource'] = tostring(TargetResources), Action, value, oldvalue
| take 1000
 ",NA
EL0,01,I,01,,Identity,Privileged Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Entra,AuditLogs,OperationName,Update Service Principal,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"AuditLogs
| where TimeGenerated > ago(90d)
| where OperationName in (""Update application"", ""Update service principal"", ""Update application – Certificates and secrets management "")
| extend x = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].displayName)
| extend Action = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].displayName)
| extend value = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)
| extend oldvalue = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].oldValue)
| extend [""Attribute Value""] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0])
| extend Target = tostring(TargetResources[0].userPrincipalName)
| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| parse x with * '.' ['Attribute Set Name'] ""_"" *
| extend [""Attribute Name""] = split(x, ""_"")[1]
| extend InitiatedByUser = (tostring(InitiatedBy.user.userPrincipalName))
| extend AppDisplayName = tostring(TargetResources[0].displayName)
| extend AppId = tostring(TargetResources[0].id)
| extend DisplayName = strcat(AppDisplayName, "" ("", AppId, "")"")
| where InitiatedByUser != """"
| distinct  TimeGenerated, InitiatedByUser, DisplayName, OperationName, ['Target-Resource'] = tostring(TargetResources), Action, value, oldvalue
| take 1000
 ",NA
EL0,01,I,01,,Identity,Privileged Identity & Credential Management,Attributes,Manage/Track Changes in Attributes & Credentials,Entra,AuditLogs,OperationName,Update application - Certificates and secrets management,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"AuditLogs
| where TimeGenerated > ago(90d)
| where OperationName in (""Update application"", ""Update service principal"", ""Update application – Certificates and secrets management "")
| extend x = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].displayName)
| extend Action = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].displayName)
| extend value = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)
| extend oldvalue = tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].oldValue)
| extend [""Attribute Value""] = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0].newValue))[0])
| extend Target = tostring(TargetResources[0].userPrincipalName)
| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| parse x with * '.' ['Attribute Set Name'] ""_"" *
| extend [""Attribute Name""] = split(x, ""_"")[1]
| extend InitiatedByUser = (tostring(InitiatedBy.user.userPrincipalName))
| extend AppDisplayName = tostring(TargetResources[0].displayName)
| extend AppId = tostring(TargetResources[0].id)
| extend DisplayName = strcat(AppDisplayName, "" ("", AppId, "")"")
| where InitiatedByUser != """"
| distinct  TimeGenerated, InitiatedByUser, DisplayName, OperationName, ['Target-Resource'] = tostring(TargetResources), Action, value, oldvalue
| take 1000
 ",NA
EL0,01,JA,02,,Identity,Privileged Identity & Credential Management,Track Usage,Credential Usage,Windows,SecurityEvent,EventID ,"4768(S, F): A Kerberos authentication ticket (TGT) was requested",https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4768,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Identifier']); //watchlist for priv users
SecurityEvent //This event is logged on domain controllers only and both success and failure instances of this event are logged.
| extend d = parse_xml(EventData)
| extend EventDataParsed = parse_json(tostring(d.EventData))
| mv-expand DataItem = EventDataParsed.Data
| where TimeGenerated >= ago(90d)
| where EventID == 4768
| where Activity == ""4768 - A Kerberos authentication ticket (TGT) was requested.""
| distinct TimeGenerated, Name = tostring(DataItem[""@Name""]), Value = tostring(DataItem[""#text""]), Activity, Source = ""SecurityEvent""
| summarize 
    User = anyif(Value, Name == ""TargetUserName""),
    CertIssuerName = anyif(Value, Name == ""CertIssuerName""), 
    CertSerialNumber = anyif(Value, Name == ""CertSerialNumber""), 
    CertThumbprint = anyif(Value, Name == ""CertThumbprint"") 
    by TimeGenerated, Source, Activity
| where isnotempty(CertIssuerName) and isnotempty(CertSerialNumber) and isnotempty(CertThumbprint)
| where User !contains ""$"" //comment out to see machines
| where User in (PrivUsers)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,JB,01,,Identity,Privileged Identity & Credential Management,Track Usage,Credential Usage,Entra,SigninLogs,AuthenticationDetails,AuthenticationDetails,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-sign-ins,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Principal Name']); //watchlist for priv users
SigninLogs //Interactive user sign-ins are sign-ins that require the user to supply an authentication factor
| where TimeGenerated > ago(90d)
| mv-expand todynamic(AuthenticationDetails)
| extend AuthMethod = tostring(AuthenticationDetails.authenticationMethod)
| where AuthMethod <> ""Previously satisfied""
| where isnotempty(AuthMethod)
| where UserPrincipalName in (PrivUsers)
| distinct TimeGenerated, UserPrincipalName, AuthMethod, Category, AppDisplayName
| sort by TimeGenerated desc
| summarize count() by TimeGenerated, AuthMethod, UserPrincipalName, AppDisplayName
| take 1000",NA
EL0,01,JC,01,,Identity,Privileged Identity & Credential Management,Track Usage,Credential Usage,Entra,AADNonInteractiveUserSignInLogs,AuthenticationDetails,AuthenticationDetails,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-noninteractive-sign-ins,"let PrivUsers = (_GetWatchlist('PrivUsers')
    | project ['User Principal Name']); //watchlist for priv users
AADNonInteractiveUserSignInLogs //Non-interactive user sign-ins are sign-ins that were performed by a client app or an OS component on behalf of a user
| where TimeGenerated > ago(24hr)
| mv-expand todynamic(AuthenticationDetails)
| extend AuthMethod = tostring(AuthenticationDetails.authenticationMethod)
| where isnotempty(AuthMethod)
| where UserPrincipalName in (PrivUsers)
| distinct TimeGenerated, UserPrincipalName, AuthMethod, Category, AppDisplayName
| sort by TimeGenerated desc
| summarize count() by TimeGenerated, AuthMethod, UserPrincipalName, AppDisplayName
| take 1000",NA
EL0,01,JD,01,,Identity,Privileged Identity & Credential Management,Track Usage,Credential Usage,Entra,ADFSSignInLogs,OperationName ,Sign-in activity,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/hybrid/connect/how-to-connect-health-ad-fs-sign-in,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Principal Name']); //watchlist for priv users
ADFSSignInLogs
| where TimeGenerated > ago(90d)
| where OperationName == ""Sign-in activity""
| where UserPrincipalName in (PrivUsers)
| distinct TimeGenerated, UserPrincipalName, ResourceIdentity, Requirement, AuthenticationDetails, AuthenticationProcessingDetails
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,KA,01,,Identity,Privileged Identity & Credential Management,Account,Deprovisioning,Entra,AuditLogs,OperationName,Remove,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"AuditLogs //this shows deprovisioning if the user, Entra Identity Governance or Entra PIM service  triggered the removal from role
| where TimeGenerated > ago(90d)
| where OperationName contains ""Remove member"" or OperationName has ""Remove eligible""
| extend ['Initiated By'] = Identity
| distinct TimeGenerated, OperationName, ['Initiated By'], Result, ['Target-Resource'] = tostring(TargetResources) 
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,KB,01,,Identity,Privileged Identity & Credential Management,Account,Deprovisioning,Entra,MicrosoftGraphActivityLogs,RequestUri,Remove,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/graph/microsoft-graph-activity-logs-overview?toc=%2Fentra%2Fidentity%2Fmonitoring-health%2Ftoc.json&bc=%2Fentra%2Fidentity%2Fmonitoring-health%2Fbreadcrumb%2FTOC.json,"MicrosoftGraphActivityLogs  //View POST privileged de-provisioning by user or service to role mgmt and status of eligibiltiy by result
| where TimeGenerated > ago(90d)
| where RequestMethod == 'POST'
| where RequestUri has '/roleManagement/directory/roleAssignments' //Captures /beta and /v1.0
| join ( AuditLogs
| extend id_ = tostring(parse_json(tostring(InitiatedBy.user)).id)
)
on $left.UserId == $right.id_
| where OperationName  contains ""Remove member"" or OperationName has ""Remove eligible""
| distinct ActivityDateTime, RequestUri, ['Initiated By Service'] = tostring(parse_json(tostring(InitiatedBy.app)).displayName), ['Initiated By User'] = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), OperationName, Result, ['Target-Resource'] = tostring(TargetResources)
| sort by ActivityDateTime desc
| take 1000",NA
EL0,01,KC,07,,Identity,Privileged Identity & Credential Management,Account,Deprovisioning,Microsoft Defender for Identity,IdentityDirectoryEvents,ActionType,Group membership changed,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDI#connect-events,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-identitydirectoryevents-table,"let SensitiveGroupName = pack_array(  // Declare Sensitive Group names. Add any groups that you manually tagged as sensitive
    'Account Operators',
    'Administrators',
    'Domain Admins', 
    'Backup Operators',
    'Domain Controllers',
    'Enterprise Admins',
    'Enterprise Read-only Domain Controllers',
    'Group Policy Creator Owners',
    'Incoming Forest Trust Builders',
    'Microsoft Exchange Servers',
    'Network Configuration Operators',
    'Microsoft Exchange Servers',
    'Print Operators',
    'Read-only Domain Controllers',
    'Replicator',
    'Schema Admins',
    'Server Operators'
);
IdentityDirectoryEvents
| where TimeGenerated > ago(90d)
| where Application == ""Active Directory""
| where ActionType == ""Group Membership changed""
| where DestinationDeviceName != """" // Exclude activites coming AD Sync changes. 
| extend ToGroup = tostring(parse_json(AdditionalFields).[""TO.GROUP""]) // Extracts the group name if action is add enity to a group.
| extend FromGroup = tostring(parse_json(AdditionalFields).[""FROM.GROUP""]) // etracts the group name if action is remove entity from a group.
| extend Action = iff(isempty(ToGroup), ""Remove"", ""Add"") // calculates if the action is Remove or Add
| extend GroupModified = iff(isempty(ToGroup), FromGroup, ToGroup) // group name that the action was taken on
| extend Target_Group = tostring(parse_json(AdditionalFields).[""TARGET_OBJECT.GROUP""])
| where GroupModified in~ (SensitiveGroupName)
| where Action == 'Remove' //deprovisioning
| project TimeGenerated, Action, GroupModified,  Target_Account = TargetAccountDisplayName, Target_UPN = TargetAccountUpn, Target_Group,  DC=DestinationDeviceName, Actor=AccountName, ActorDomain=AccountDomain, AdditionalFields
| sort by TimeGenerated desc
| take 1000","let SensitiveGroupName = pack_array(  // Declare Sensitive Group names. Add any groups that you manually tagged as sensitive
    'Account Operators',
    'Administrators',
    'Domain Admins', 
    'Backup Operators',
    'Domain Controllers',
    'Enterprise Admins',
    'Enterprise Read-only Domain Controllers',
    'Group Policy Creator Owners',
    'Incoming Forest Trust Builders',
    'Microsoft Exchange Servers',
    'Network Configuration Operators',
    'Microsoft Exchange Servers',
    'Print Operators',
    'Read-only Domain Controllers',
    'Replicator',
    'Schema Admins',
    'Server Operators'
);
IdentityDirectoryEvents
| where Timestamp > ago(30d)
| where Application == ""Active Directory""
| where ActionType == ""Group Membership changed""
| where DestinationDeviceName != """" // Exclude activites coming AD Sync changes. 
| extend ToGroup = tostring(parse_json(AdditionalFields).[""TO.GROUP""]) // Extracts the group name if action is add enity to a group.
| extend FromGroup = tostring(parse_json(AdditionalFields).[""FROM.GROUP""]) // etracts the group name if action is remove entity from a group.
| extend Action = iff(isempty(ToGroup), ""Remove"", ""Add"") // calculates if the action is Remove or Add
| extend GroupModified = iff(isempty(ToGroup), FromGroup, ToGroup) // group name that the action was taken on
| extend Target_Group = tostring(parse_json(AdditionalFields).[""TARGET_OBJECT.GROUP""])
| where GroupModified in~ (SensitiveGroupName)
| where Action == 'Remove' //deprovisioning
| project Timestamp, Action, GroupModified,  Target_Account = TargetAccountDisplayName, Target_UPN = TargetAccountUpn, Target_Group,  DC=DestinationDeviceName, Actor=AccountName, ActorDomain=AccountDomain, AdditionalFields
| sort by Timestamp desc
| take 1000"
EL0,01,KD,06,,Identity,Privileged Identity & Credential Management,Account,Deprovisioning,Microsoft Defender for Endpoint,DeviceEvents,ActionType,UserAccountRemovedFromLocalGroup,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDE#connect-events,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-deviceevents-table,"let SensitiveGroupName = pack_array(  // Declare Sensitive Group names. Add any groups that you manually tagged as sensitive
    'Account Operators',
    'Administrators',
    'Domain Admins', 
    'Backup Operators',
    'Domain Controllers',
    'Enterprise Admins',
    'Enterprise Read-only Domain Controllers',
    'Group Policy Creator Owners',
    'Incoming Forest Trust Builders',
    'Microsoft Exchange Servers',
    'Network Configuration Operators',
    'Microsoft Exchange Servers',
    'Print Operators',
    'Read-only Domain Controllers',
    'Replicator',
    'Schema Admins',
    'Server Operators'
);
DeviceEvents
| where TimeGenerated > ago(90d)
| where ActionType == ""UserAccountRemovedFromLocalGroup"" //deprovisioned from priv group
| extend Fields = parse_json(AdditionalFields)
| extend RemoveFromGroup = tostring(Fields.GroupName)
| extend GroupDomainName = tostring(Fields.GroupDomainName)
| where RemoveFromGroup in (SensitiveGroupName)
| extend InitiatedActor = strcat(InitiatingProcessAccountDomain, ""\\"", InitiatingProcessAccountName)
| distinct TimeGenerated, DeviceName, ActionType, InitiatedActor, TargetSID = AccountSid, GroupDomainName, RemoveFromGroup
| sort by TimeGenerated desc 
| take 1000
","let SensitiveGroupName = pack_array(  // Declare Sensitive Group names. Add any groups that you manually tagged as sensitive
    'Account Operators',
    'Administrators',
    'Domain Admins', 
    'Backup Operators',
    'Domain Controllers',
    'Enterprise Admins',
    'Enterprise Read-only Domain Controllers',
    'Group Policy Creator Owners',
    'Incoming Forest Trust Builders',
    'Microsoft Exchange Servers',
    'Network Configuration Operators',
    'Microsoft Exchange Servers',
    'Print Operators',
    'Read-only Domain Controllers',
    'Replicator',
    'Schema Admins',
    'Server Operators'
);
DeviceEvents
| where Timestamp > ago(30d)
| where ActionType == ""UserAccountRemovedFromLocalGroup"" //deprovisioned from priv group
| extend Fields = parse_json(AdditionalFields)
| extend RemoveFromGroup = tostring(Fields.GroupName)
| extend GroupDomainName = tostring(Fields.GroupDomainName)
| where RemoveFromGroup in (SensitiveGroupName)
| extend InitiatedActor = strcat(InitiatingProcessAccountDomain, ""\\"", InitiatingProcessAccountName)
| distinct Timestamp, DeviceName, ActionType, InitiatedActor, TargetSID = AccountSid, GroupDomainName, RemoveFromGroup
| sort by Timestamp desc 
| take 1000"
EL0,01,LA,01,,Identity,Privileged Identity & Credential Management,Credentials,Establish & Manage Privileges,Entra,AuditLogs,TargetResources,role,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"AuditLogs //Entra, establish and managed privile roles
| where TimeGenerated > ago(90d)
| where OperationName has ('role')
| where TargetResources has 'role'
| extend ['Initiated By'] = Identity
| distinct TimeGenerated, OperationName, ['Initiated By'], Result, ['Target-Resource'] = tostring(TargetResources) 
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,MB,01,,Identity,Privileged Identity & Credential Management,Session Management and Auditing,"Isolate, Monitor, Record, Audit Privilege Sessions",Entra,SigninLogs,UserPrincipalName,(PrivUsers),https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-sign-ins,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Principal Name']); //watchlist for priv users; this is just looking at signinlog at what priv users are using a managed device
SigninLogs
| where TimeGenerated > ago(90d)
| where UserPrincipalName in (PrivUsers) //verify your priv users are using compliant and trusted devices (PAW is an example)
| project TimeGenerated, Identity, UserPrincipalName,  
              Compliant = tostring(DeviceDetail.isCompliant), 
              Managed = tostring(DeviceDetail.isManaged), 
              DeviceName = tostring(DeviceDetail.displayName)              
    | order by TimeGenerated desc  // Sort by the time of the event
    | take 1000",NA
EL0,01,MB,01,,Identity,Privileged Identity & Credential Management,Session Management and Auditing,"Isolate, Monitor, Record, Audit Privilege Sessions",Entra,AuditLogs,UserPrincipalName,(PrivUsers),https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"let PrivUsers = (_GetWatchlist('PrivUsers') | project ['User Principal Name']); //watchlist for priv users, who have leveraged PIM in any fashion (cloud or on prem)
SigninLogs
| join AuditLogs on $left.Identity == $right.Identity
| where TimeGenerated > ago(90d)  // Limit to the last 90 days
| where OperationName1 has ""role""  // Filter for role-related operations
| where TargetResources has ""role""  // Ensure the target resources contain ""role""
| where UserPrincipalName in (PrivUsers) //verify your priv users are using compliant and trusted devices (PAW is an example)
| project TimeGenerated, OperationName1, Identity, UserPrincipalName, Result, 
              Compliant = tostring(DeviceDetail.isCompliant), 
              Managed = tostring(DeviceDetail.isManaged), 
              DeviceName = tostring(DeviceDetail.displayName)       
    | order by TimeGenerated desc  // Sort by the time of the event
    | take 1000",NA
EL0,01,NA,03,,Identity,Privileged Identity & Credential Management,Control Privileged Actions,Commands,Azure,AzureActivity,ActivityStatusValue,Start,https://learn.microsoft.com/en-us/azure/sentinel/quickstart-onboard,https://learn.microsoft.com/en-us/azure/azure-monitor/reference/tables/azureactivity,"IdentityInfo
| where TimeGenerated >ago(90d)
| join AzureActivity on $left.AccountUPN and $right.Caller
| where isnotnull(AssignedRoles)
| where AssignedRoles <> ""[]""
| where ActivityStatusValue == 'Start'
| distinct TimeGenerated, tostring(AssignedRoles), Caller, OperationNameValue,ActivityStatusValue, tostring(Properties_d)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,NB,01,,Identity,Privileged Identity & Credential Management,Control Privileged Actions,Tasks,Entra,AuditLogs,OperationName,"""""",https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"IdentityInfo
| where TimeGenerated >ago(90d)
| join AuditLogs on $left.AccountUPN and $right.Identity
| where isnotnull(AssignedRoles)
| where AssignedRoles <> ""[]""
| distinct TimeGenerated, tostring(AssignedRoles), Identity, OperationName
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,NC,03,,Identity,Privileged Identity & Credential Management,Control Privileged Actions,Tasks,Azure,AzureActivity,OperationNameValue,"""""",https://learn.microsoft.com/en-us/azure/sentinel/quickstart-onboard,https://learn.microsoft.com/en-us/azure/azure-monitor/reference/tables/azureactivity,"IdentityInfo
| where TimeGenerated >ago(90d)
| join AzureActivity on $left.AccountUPN and $right.Caller
| where isnotnull(AssignedRoles)
| where AssignedRoles <> ""[]""
| distinct TimeGenerated, tostring(AssignedRoles), Caller, OperationNameValue
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,OA,01,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Entra,AuditLogs,OperationName,Add app role assignment to service principal,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"AuditLogs //adding msgraph (or other api) to a service principal
| where TimeGenerated > ago(90d)
| where OperationName == ""Add app role assignment to service principal""
| extend AppRoleAdded = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))
| extend ActorIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)
| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| extend ServicePrincipalName = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[6].newValue)))
| distinct TimeGenerated, OperationName, AppRoleAdded, ServicePrincipalName,Actor, ActorIPAddress
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,OB,01,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Entra,AuditLogs,OperationName,Add member to role,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"AuditLogs //adding Entra ID role to service principal
| where TimeGenerated > ago(90d)
| where OperationName == ""Add member to role""
| extend ServicePrincipalType = tostring(TargetResources[0].type)
| extend ServicePrincipalObjectId = tostring(TargetResources[0].id)
| extend RoleAdded = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue)))
| extend ServicePrincipalName = tostring(TargetResources[0].displayName)
| extend Actor = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)
| extend ActorIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)
| where ServicePrincipalType == ""ServicePrincipal""
| distinct TimeGenerated, OperationName, RoleAdded, ServicePrincipalName, ServicePrincipalObjectId, Actor, ActorIPAddress
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,OC,03,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Azure,AzureActivity,OperationNameValue,MICROSOFT.AUTHORIZATION/ROLEASSIGNMENTS/WRITE,https://learn.microsoft.com/en-us/azure/sentinel/quickstart-onboard,https://learn.microsoft.com/en-us/azure/azure-monitor/reference/tables/azureactivity,"AzureActivity //auditing priv escalation via Service Principal on a subscription and downlevel, verifying resource provider given
| where TimeGenerated > ago(90d)
| where OperationNameValue == ""MICROSOFT.AUTHORIZATION/ROLEASSIGNMENTS/WRITE""
| extend ServicePrincipalObjectId = tostring(parse_json(tostring(parse_json(tostring(Properties_d.requestbody)).Properties)).PrincipalId)
| extend ServicePrincipalType = tostring(parse_json(tostring(parse_json(tostring(Properties_d.requestbody)).Properties)).PrincipalType)
| extend Scope = tostring(parse_json(tostring(parse_json(tostring(Properties_d.requestbody)).Properties)).Scope)
| extend RoleAdded = tostring(parse_json(tostring(parse_json(tostring(parse_json(Properties).requestbody)).Properties)).RoleDefinitionId)
| extend Actor = tostring(Properties_d.caller)
| extend ResourceProvider = tostring(parse_json(Properties).resourceProviderValue)
| where ServicePrincipalType == ""ServicePrincipal""
| distinct TimeGenerated, RoleAdded, ResourceProvider, Scope, ServicePrincipalObjectId, Actor
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,OD,03,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Azure,AzureDiagnostics,ResouceType,Vaults,https://learn.microsoft.com/en-us/azure/sentinel/connect-services-diagnostic-setting-based#connect-via-a-diagnostic-setting-based-connector-managed-by-azure-policy,https://learn.microsoft.com/en-us/azure/azure-monitor/reference/tables/azurediagnostics,"AzureDiagnostics
| where TimeGenerated > ago(90d)
| where ResourceType == ""VAULTS""
| where OperationName == ""VaultPatch""
| where ResultType == ""Success""
| join kind=inner (
    AuditLogs
    | extend oid = tostring(TargetResources[0].id)
) on $left.addedAccessPolicy_ObjectId_g == $right.oid
| extend SPName = tostring(TargetResources[0].displayName)
| extend AppID = tostring(AdditionalDetails[0].value)
| where isnotempty(addedAccessPolicy_ObjectId_g) or isnotempty(oid)
| project-rename SPObjectID=addedAccessPolicy_ObjectId_g, Actor=identity_claim_http_schemas_xmlsoap_org_ws_2005_05_identity_claims_name_s, AddedKeyPolicy = addedAccessPolicy_Permissions_keys_s, AddedSecretPolicy = addedAccessPolicy_Permissions_secrets_s,AddedCertPolicy = addedAccessPolicy_Permissions_certificates_s
| where isnotempty(AddedKeyPolicy) or isnotempty(AddedSecretPolicy) or isnotempty(AddedCertPolicy)
| distinct TimeGenerated, KeyVaultName=Resource, SPName, SPObjectID, AppID, Actor, IPAddressofActor=CallerIPAddress, AddedSecretPolicy, AddedKeyPolicy, AddedCertPolicy
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,OE,01,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Entra,AuditLogs,OperationName,Add member to role completed (PIM activation),https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"let Saturday = time(6.00:00:00); //priv escalation outside of working hours
let Sunday = time(0.00:00:00);
AuditLogs
// extend LocalTime to your time zone
| extend LocalTime = TimeGenerated + 5h
| where LocalTime > ago(90d)
// Change hours of the day to suit your company, i.e this would find activations between 6pm and 6am
| where hourofday(LocalTime) !between (6 .. 18) 
| where OperationName == ""Add member to role completed (PIM activation)""
| extend ['Initiated By'] = tostring(parse_json(tostring(InitiatedBy.user)).displayName)
| extend ['PIM Group Updated'] = case(
                        tostring(TargetResources[3].type) == 'Other',
                        tostring(TargetResources[3].displayName),
                        ''
                     )
| extend ['PIM Role Updated'] = case(
                        tostring(TargetResources[3].type) == 'Directory',
                        tostring(TargetResources[0].displayName),
                        ''
                     )
// Add ""Member"" to PIM Role Updated if there is a PIM Group Updated
| extend ['PIM Role Updated'] = case(
                        isnotempty(['PIM Group Updated']),
                        strcat(tostring(['PIM Role Updated']), "" Member""),
                        tostring(['PIM Role Updated'])
                     )
// Add ""Role"" to PIM Group Updated if there is a PIM Role Updated
| extend ['PIM Group Updated'] = case(
                        isnotempty(['PIM Role Updated']),
                        strcat(tostring(['PIM Group Updated']), "" Role""),
                        tostring(['PIM Group Updated'])
                     )
| distinct LocalTime, Identity, ['PIM Role Updated'], ['PIM Group Updated'], ResultReason
| sort by LocalTime desc
| take 1000",NA
EL0,01,OF,01,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Entra,AuditLogs,OperationName,"""""",https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"let existingoperations= //looking for first time something occures and a new event
    AuditLogs
    | where TimeGenerated > ago(90d) and TimeGenerated < ago(90d)
    | distinct OperationName;
AuditLogs
| where TimeGenerated > ago(7d)
| summarize Count=count() by OperationName, Category
| where OperationName !in (existingoperations)
| sort by Count desc ",NA
EL0,01,OG,01,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Entra,AADServicePrincipalSignInLogs,ResultType,0,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-sign-ins,"let timeframe = 90d; //This query alerts when a service principal signs in to a new IP address in the last week compared to the prior 90 days.
AADServicePrincipalSignInLogs
| where TimeGenerated > ago(timeframe) and TimeGenerated < ago(7d)
| distinct AppId, IPAddress
| join kind=rightanti
    (
    AADServicePrincipalSignInLogs
    | where TimeGenerated > ago(7d)
    | project TimeGenerated, AppId, IPAddress, ResultType, ServicePrincipalName
    )
    on IPAddress
| where ResultType == ""0""
| distinct ServicePrincipalName, AppId, IPAddress
| take 1000",NA
EL0,01,OH,01,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Entra,AADManagedIdentitySignInLogs,ResultType,0,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-sign-ins,"AADManagedIdentitySignInLogs //summarize all the resources each managed identity accesses. For instance Azure Key Vault, Azure Storage, Azure SQL. The higher the count, then the higher the blast radius.
| where TimeGenerated > ago(90d)
| where ResultType == 0
| summarize ResourcesAccessed=make_set(ResourceDisplayName) by ServicePrincipalName
| take 1000",NA
EL0,01,OI,01,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Entra,AADManagedIdentitySignInLogs,ResultType,0,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/concept-sign-ins,"AADManagedIdentitySignInLogs //We can also detect when a managed identity accesses a new resource that it hadn’t before. This query will return any managed identities that access resources that they hadn’t in the prior 90 days. For example, if you have a managed identity that previously only accessed Azure Storage, then accesses an Azure Key Vault, this would find that event.
| where TimeGenerated > ago (90d) and TimeGenerated < ago(1d)
| where ResultType == ""0""
| distinct ServicePrincipalId, ResourceIdentity
| join kind=rightanti (
    AADManagedIdentitySignInLogs
    | where TimeGenerated > ago (1d)
    | where ResultType == ""0""
    )
    on ServicePrincipalId, ResourceIdentity
| distinct ServicePrincipalId, ServicePrincipalName, ResourceIdentity, ResourceDisplayName",NA
EL0,01,OJ,01,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Entra,AuditLogs,OperationName,Consent to application,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/howto-integrate-activity-logs-with-azure-monitor-logs,https://learn.microsoft.com/en-us/entra/identity/monitoring-health/reference-audit-activities,"AuditLogs //review all consent grants by entra audit logs
| where TimeGenerated > ago(90d)
| where OperationName == ""Consent to application""
| extend ModifiedProperties = tostring(parse_json(tostring(parse_json(tostring(parse_json(TargetResources)[0].modifiedProperties)))))
| distinct TimeGenerated, InitiatedBy = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), displayName_ = tostring(TargetResources[0].displayName),ModifiedProperties
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,OK,06,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Microsoft Defender for Endpoint,DeviceEvents,AdditionalFields.Command,Consent to application,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDE#connect-events,https://learn.microsoft.com/en-us/defender-xdr/advanced-hunting-deviceevents-table,"DeviceEvents //viewing any consent grants against entra from a device with MDE agent
| where TimeGenerated > ago(90d)
| where AdditionalFields.Command contains 'Consent to application'
| distinct TimeGenerated, DeviceName, InitiatingProcessAccountName, InitiatingProcessParentFileName,  Consent = tostring(AdditionalFields.Command)
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,OL,04,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Sentinel,BehaviorAnalytics,ActionType,Consent to application,https://learn.microsoft.com/en-us/azure/sentinel/enable-entity-behavior-analytics?tabs=azure,https://docs.azure.cn/en-us/sentinel/ueba-reference,"BehaviorAnalytics
| where TimeGenerated > ago(90d)
| where ActionType == 'Consent to application'
| sort by TimeGenerated desc 
| take 1000",NA
EL0,01,OM,05,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Microsoft Defender for Cloud Apps,CloudAppEvents,ActionType,Consent to application.,https://learn.microsoft.com/en-us/azure/sentinel/connect-microsoft-365-defender?tabs=MDCA#connect-events,https://learn.microsoft.com/en-us/azure/azure-monitor/reference/tables/cloudappevents,"CloudAppEvents
| where TimeGenerated > ago(90d)
| where ActionType == ""Consent to application.""
| sort by TimeGenerated desc 
| take 1000",NA
EL0,01,ON,02,,Identity,Privileged Identity & Credential Management,Escalation and Delegation Monitoring,Track Privilege Escalation & Delegation,Windows,SecurityEvent,EventID," (4728, 4729, 4732, 4756)",https://github.com/Cyberlorians/M-21-31/blob/main/EL0/Identity/M2131-ICAM-Deployments.md,https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/audit-security-group-management,"SecurityEvent
| where TimeGenerated > ago(90d)
| where EventID in (4728, 4729, 4732, 4756) // Event IDs for user added to a security-enabled group (potential privilege escalation)
| extend AccountName = tostring(split(TargetUserName, '\\')[5])
| extend TargetGroup = tostring(split(TargetUserName, '\\')[0])
| extend Target = tostring(split(tostring(split(MemberName, "","")[0]), ""="")[1])  // Extract the value after CN=
| where isnotempty(Target)
| distinct TimeGenerated, InitiatedBy = SubjectAccount, TargetGroup, Target, EventID, Activity
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,PA,04,,Identity,Privileged Identity & Credential Management,Behavorial Analytics,"Monitor, Alert and Respond",Sentinel,IdentityInfo,SourceSystem,summarize,https://learn.microsoft.com/en-us/azure/sentinel/enable-entity-behavior-analytics?tabs=azure,https://docs.azure.cn/en-us/sentinel/ueba-reference,"IdentityInfo
| summarize arg_max(TimeGenerated, *) by SourceSystem
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,PB,04,,Identity,Privileged Identity & Credential Management,Behavorial Analytics,"Monitor, Alert and Respond",Sentinel,BehaviorAnalytics,SourceSystem,summarize,https://learn.microsoft.com/en-us/azure/sentinel/enable-entity-behavior-analytics?tabs=azure,https://docs.azure.cn/en-us/sentinel/ueba-reference,"BehaviorAnalytics
| summarize arg_max(TimeGenerated, *) by SourceSystem
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,PC,04,,Identity,Privileged Identity & Credential Management,Behavorial Analytics,"Monitor, Alert and Respond",Sentinel,UserPeerAnalytics,SourceSystem,summarize,https://learn.microsoft.com/en-us/azure/sentinel/enable-entity-behavior-analytics?tabs=azure,https://docs.azure.cn/en-us/sentinel/ueba-reference,"UserPeerAnalytics
| summarize arg_max(TimeGenerated, *) by SourceSystem
| sort by TimeGenerated desc
| take 1000",NA
EL0,01,PD,04,,Identity,Privileged Identity & Credential Management,Behavorial Analytics,"Monitor, Alert and Respond",Sentinel,UserAccessAnalytics,SourceSystem,summarize,https://learn.microsoft.com/en-us/azure/sentinel/enable-entity-behavior-analytics?tabs=azure,https://docs.azure.cn/en-us/sentinel/ueba-reference,"UserAccessAnalytics
| summarize arg_max(TimeGenerated, *) by SourceSystem
| sort by TimeGenerated desc
| take 1000",NA
EL0,02,,,,Email,,,,,,,,,,,
EL0,03,,,,Network,,,,,,,,,,,
EL0,05,,,,Cloud,,,,,,,,,,,
EL0,04,AA,02,01,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,4656: A handle to an object was requested,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4656 events, enable the relevant subcategory, e.g.:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File System
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit Registry
| where TimeGenerated > ago(90d)| where EventID == 4656
| where Activity == ""4656 - A handle to an object was requested.""
//
// ----- Part 2: Data Parsing -----
| extend EventData_xml = parse_xml(EventData)
| extend
    SubjectUserSid = tostring(EventData_xml.EventData.Data[0]['#text']),
    SubjectUserName = tostring(EventData_xml.EventData.Data[1]['#text']),
    ObjectType = tostring(EventData_xml.EventData.Data[5]['#text']),
    ObjectName = tostring(EventData_xml.EventData.Data[6]['#text']),
    ProcessName = tostring(EventData_xml.EventData.Data[10]['#text']),
    AccessList = tostring(EventData_xml.EventData.Data[12]['#text'])
//
// ----- Part 3: Custom Filtering -----
// This section now filters out common service, machine, and system accounts to focus on user activity.
| where not(SubjectUserName has_any ('svc', 'MSOL', '$')) // <-- EDIT THIS LIST to exclude accounts
// This filter removes events generated by built-in system accounts to help focus on human user activity.
| where not(SubjectUserSid in (""S-1-5-18"", ""S-1-5-19"", ""S-1-5-20""))
//
// ----- Part 4: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Analysis & Enrichment -----
| extend
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 6: Final Output -----
// This section creates a table of unique handle requests.
| distinct TimeGenerated, IsTargetedUser, Computer, Actor = SubjectUserName, SubjectUserSid, ObjectType, ObjectName, ProcessName, AccessList, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AA,02,02,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,4657 - A registry value was modified,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4657 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit Registry (Success)
| where TimeGenerated > ago(90d)
| where EventID == 4657
| where Activity == ""4657 - A registry value was modified.""
//
// ----- Part 2: Data Parsing -----
// This section parses the XML data to extract details about the registry modification.
| extend EventData_xml = parse_xml(EventData)
| extend
    // ADDED: SubjectUserSid is now parsed to enable targeted filtering.
    SubjectUserSid = tostring(EventData_xml.EventData.Data[0]['#text']),
    SubjectUserName = tostring(EventData_xml.EventData.Data[1]['#text']),
    ObjectName = tostring(EventData_xml.EventData.Data[5]['#text']),
    ObjectValueName = tostring(EventData_xml.EventData.Data[6]['#text']),
    OldValue = tostring(EventData_xml.EventData.Data[8]['#text']),
    NewValue = tostring(EventData_xml.EventData.Data[10]['#text']),
    ProcessName = tostring(EventData_xml.EventData.Data[12]['#text'])
//
// ----- Part 3: Custom Filtering -----
// This line allows analysts to easily filter out system or service accounts.
| where not(SubjectUserName has_any ('svc', 'MSOL', '$')) // <-- EDIT THIS LIST to exclude accounts
//
// ----- Part 4: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Analysis & Enrichment -----
| extend
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 6: Final Output -----
// This section creates a table of unique registry modification events.
| distinct TimeGenerated, IsTargetedUser, Computer, Actor = SubjectUserName, SubjectUserSid, ProcessName, RegistryKey = ObjectName, RegistryValue = ObjectValueName, OldValue, NewValue, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AA,02,03,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,4658 - The handle to an object was closed,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4658 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit Handle Manipulation (Success)
| where TimeGenerated > ago(90d)
| where EventID == 4658
| where Activity == ""4658 - The handle to an object was closed.""
//
// ----- Part 2: Data Parsing -----
// This section parses the XML data to extract details about the handle that was closed.
| extend EventData_xml = parse_xml(EventData)
| extend
    SubjectUserSid = tostring(EventData_xml.EventData.Data[0]['#text']),
    SubjectUserName = tostring(EventData_xml.EventData.Data[1]['#text']),
    ObjectName = tostring(EventData_xml.EventData.Data[6]['#text']),
    HandleId = tostring(EventData_xml.EventData.Data[7]['#text']),
    ProcessName = tostring(EventData_xml.EventData.Data[9]['#text'])
//
// ----- Part 3: Custom & Targeted Filtering -----
// This line allows analysts to easily filter out system or service accounts.
| where not(SubjectUserName has_any ('svc', 'MSOL', '$'))
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, Computer, Actor = SubjectUserName, SubjectUserSid, ProcessName, ObjectName, HandleId, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AA,02,04,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,4660 - An object was deleted,,,"// ----- Precursor Query: Find a Deletion Event -----
// This section finds recent deletion events. Run this first to find a HandleId to investigate.
SecurityEvent
// GPO Path: To capture this event, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File System (Success)
| where TimeGenerated > ago(90d)
| where EventID == 4660
| extend EventData_xml = parse_xml(EventData)
| project TimeGenerated, Computer, Activity,
    SubjectUserSid = tostring(EventData_xml.EventData.Data[0]['#text']),
    SubjectUserName = tostring(EventData_xml.EventData.Data[1]['#text']),
    HandleId = tostring(EventData_xml.EventData.Data[5]['#text']),
    ProcessId = tostring(EventData_xml.EventData.Data[6]['#text']),
    ProcessName = tostring(EventData_xml.EventData.Data[7]['#text'])
| sort by TimeGenerated desc
//
// ADDING SPACE //

// Part 1: Investigation Parameters -----
// To investigate specific users, add their SIDs to this list. Leave empty to ignore.
let targetedSids = dynamic([]); // Example: dynamic([""S-1-5-...""])
// To investigate a specific deletion event, paste the HandleId here. Leave empty to ignore.
let targetedHandleId = """"; // Example: ""0x1a4""
//
// ----- Part 2: Gather Deletion Events (4660) -----
// GPO Path for 4660: Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File System (Success)
let DeletionConfirmations = SecurityEvent
| where TimeGenerated > ago(30d)
| where EventID == 4660
| extend EventData_xml = parse_xml(EventData)
| extend
    SubjectUserSid = tostring(EventData_xml.EventData.Data[0]['#text']),
    SubjectUserName = tostring(EventData_xml.EventData.Data[1]['#text']),
    HandleId = tostring(EventData_xml.EventData.Data[5]['#text']),
    ProcessId = tostring(EventData_xml.EventData.Data[6]['#text']),
    ProcessName = tostring(EventData_xml.EventData.Data[7]['#text'])
| where not(ProcessName has_any (""SenseIR.exe"", ""MsSense.exe""));
//
// ----- Part 3: Gather Object Access Details (4663) -----
// GPO Path for 4663: Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File System (Success, Failure)
let FileDetails = SecurityEvent
| where TimeGenerated > ago(30d)
| where EventID == 4663 and isnotempty(ObjectName)
| project
    ObjectName, SubjectUserSid_4663 = SubjectUserSid, Computer_4663 = Computer,
    ProcessId_4663 = ProcessId, HandleId_4663 = HandleId;
//
// ----- Part 4: Joining, Filtering, and Final Output -----
DeletionConfirmations
// Apply filters based on the parameters set in Part 1.
| where (array_length(targetedSids) == 0 or SubjectUserSid in (targetedSids))
| where (isempty(targetedHandleId) or HandleId == targetedHandleId)
// Join with file details to get the ObjectName.
| join kind=inner (FileDetails) on $left.Computer == $right.Computer_4663 and
     $left.ProcessId == $right.ProcessId_4663 and $left.HandleId == $right.HandleId_4663 and
     $left.SubjectUserSid == $right.SubjectUserSid_4663
| distinct TimeGenerated, SubjectUserName, SubjectUserSid, Computer, ProcessName, ObjectName, HandleId, Activity
| sort by TimeGenerated desc
| take 100",
EL0,04,AA,02,05,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,4663 - An attempt was made to access an object,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4663 events, enable the relevant subcategories, e.g.:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File System
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit Registry
// Note: This event also requires SACLs (System Access Control Lists) to be configured on the specific objects you want to monitor.
| where TimeGenerated > ago(90d)
| where EventID == 4663
| where Activity has ""An attempt was made to access an object.""
//
// ----- Part 2: Custom Filtering -----
// This filter focuses only on actions taken by user accounts.
| where AccountType == 'User'
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
// This section presents the unique access events, sorted by the most recent time.
| distinct TimeGenerated, IsTargetedUser, Account, SubjectUserSid, ObjectName, ObjectType, Computer, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AA,02,06,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,4670 - Permissions on an object were changed.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture all 4670 events, enable the relevant subcategories:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File System
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit Registry
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Policy Change > Audit Authentication Policy Change
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Policy Change > Audit Authorization Policy Change
// Note: This event is critical for tracking permission changes on sensitive objects like files, folders, and registry keys.
| where TimeGenerated > ago(90d)
| where EventID == 4670
| where Activity == ""4670 - Permissions on an object were changed.""
//
// ----- Part 2: Data Parsing -----
// This section parses the XML to extract the most valuable fields, including the Security Descriptors.
| extend EventData_xml = parse_xml(EventData)
| extend
    SubjectUserSid = tostring(EventData_xml.EventData.Data[0]['#text']),
    SubjectUserName = tostring(EventData_xml.EventData.Data[1]['#text']),
    ObjectName = tostring(EventData_xml.EventData.Data[5]['#text']),
    ObjectType = tostring(EventData_xml.EventData.Data[6]['#text']),
    OldSd = tostring(EventData_xml.EventData.Data[8]['#text']),
    NewSd = tostring(EventData_xml.EventData.Data[9]['#text']),
    ProcessName = tostring(EventData_xml.EventData.Data[11]['#text'])
//
// ----- Part 3: Custom Filtering -----
| where not(SubjectUserName has_any ('svc', 'MSOL', '$'))
| where not(SubjectUserSid in (""S-1-5-18"", ""S-1-5-19"", ""S-1-5-20""))
//
// ----- Part 4: Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Analysis & Enrichment -----
| extend
    // This flag explicitly confirms that the permissions were modified.
    PermissionsModified = (OldSd != NewSd),
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 6: Final Output -----
| distinct TimeGenerated, IsTargetedUser, Computer, Account = SubjectUserName, SubjectUserSid, ObjectName, ObjectType, ProcessName, PermissionsModified, OldSd, NewSd, Activity
| sort by TimeGenerated desc
| take 100",
EL0,04,AA,02,07,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,4907 - Audit settings on an object were changed.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4907 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Policy Change > Audit Policy Change (Success)
// Note: This event is critical for detecting audit tampering. An attacker may modify a SACL on an object to prevent their actions from being logged.
| where TimeGenerated > ago(90d) // Look for events in the last 90 days
| where EventID == 4907 // Filter specifically for ""Auditing settings on object were changed""
| where Activity == ""4907 - Auditing settings on object were changed.""
//
// ----- Part 2: Data Parsing -----
// This query relies on the pre-parsed fields from the SecurityEvent table. No manual parsing is performed.
// To see the specific audit setting that was changed, the 'OldSd' and 'NewSd' fields from the raw EventData would need to be parsed.
//
// ----- Part 3: Custom Filtering -----
// This is the filter from your original query to focus only on user accounts.
| where AccountType == 'User'
//
// ----- Part 4: Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
// This section creates a descriptive activity column and presents the unique audit setting change events, as originally requested.
| distinct TimeGenerated, Account, SubjectUserSid, ObjectName, ObjectType, ProcessName, Computer, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AA,02,08,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,4985 - The state of a transaction has changed,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture all 4985 events, enable one of the relevant subcategories:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File System
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Privilege Use > Audit Non Sensitive Privilege Use
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Privilege Use > Audit Other Privilege Use Events
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Privilege Use > Audit Sensitive Privilege Use
// Note: This is an informational event from the file system Transaction Manager and typically has no security relevance. It's primarily used for troubleshooting. 
| where TimeGenerated > ago(90d)
| where EventID == 4985
| where Activity == ""4985 - The state of a transaction has changed.""
//
// ----- Part 2: Data Parsing -----
// This query relies on the pre-parsed fields from the SecurityEvent table. No manual parsing is performed.
// To correlate transactions, the 'TransactionId' from the raw EventData would be required.
//
// ----- Part 3: Custom Filtering -----
// This is the filter from your original query to focus only on user accounts.
| where AccountType == 'User'
// Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
//
// ----- Part 4: Analysis & Enrichment -----
// This event is generated by the file system transaction manager. Unless you are actively troubleshooting
// file system or application issues (like with MS SQL Server), these events can generally be ignored.
//
// ----- Part 5: Final Output -----
// This section presents the unique transaction state change events, as originally requested.
| distinct TimeGenerated, SubjectAccount, SubjectUserSid, Computer, ProcessId, ProcessName, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AA,02,09,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,5140 - A network share object was accessed,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 5140 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File Share (Success, Failure)
| where TimeGenerated > ago(90d)
| where EventID == 5140
| where Activity == ""5140 - A network share object was accessed.""
//
// ----- Part 2: Data Parsing -----
// This query relies on the pre-parsed fields from the SecurityEvent table. No manual parsing is performed.
//
// ----- Part 3: Custom Filtering -----
// This section now filters for high-value shares and can be edited to exclude known safe IP ranges.
// The documentation recommends monitoring for access to sensitive shares.
| where ShareName has_any (""C$"", ""ADMIN$"") // <-- EDIT THIS LIST for sensitive shares
// The documentation also recommends monitoring for access from unexpected IP addresses.
// | where not(ipv4_is_in_range(IpAddress, ""192.168.1.0/24"", ""10.0.0.0/8"")) // <-- UNCOMMENT AND EDIT with your internal IP ranges
| where AccountType == 'User'
// Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
// This query now hunts for potentially unauthorized administrative access to file shares.
// Access to administrative shares from non-administrator subnets can be a sign of lateral movement.
//
// ----- Part 5: Final Output -----
// This section presents the filtered list of potentially suspicious share access events.
| distinct TimeGenerated, SubjectUserName, SubjectUserSid, Computer, IpAddress, IpPort, ObjectType, ShareName, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AA,02,10,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,5142 - A network share object was added.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 5142 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File Share (Success, Failure)
// Note: This event is critical for detecting potentially unauthorized data sharing or malware staging areas.
| where TimeGenerated > ago(90d)
| where EventID == 5142
| where Activity == ""5142 - A network share object was added.""
//
// ----- Part 2: Data Parsing -----
// This query relies on the pre-parsed fields from the SecurityEvent table. No manual parsing is performed.
//
// ----- Part 3: Custom Filtering -----
// This section now actively hunts for high-risk shares based on the documentation's recommendations.
| where ShareLocalPath has_any (""C:\\"", ""C:\\Windows"", ""C:\\Windows\\System32"") // Alert on shares pointing to the root drive or system folders 
or ShareName matches regex @""\w+\$$"" // Also alert on recreation of hidden administrative shares (e.g., C$, ADMIN$)
| where not(SubjectUserName has_any ('svc', 'MSOL', '$')) // <-- EDIT THIS LIST to exclude known service accounts
// Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
//
// ----- Part 4: Analysis & Enrichment -----
// This query now focuses on identifying shares that create significant security risks.
// Sharing system directories can expose credentials, binaries, and other sensitive system data.
//
// ----- Part 5: Final Output -----
// This section creates a clean, readable table of high-risk share creation events.
| distinct TimeGenerated, Computer, Actor = SubjectUserName, SubjectUserSid, ShareName, SharePath = ShareLocalPath, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AA,02,11,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,5143 - A network share object was modified,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 5143 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File Share (Success, Failure)
// Note: This event is critical for tracking permission changes or other modifications to sensitive shares, which could be an attempt to weaken security.
| where TimeGenerated > ago(90d)
| where EventID == 5143
| where Activity == ""5143 - A network share object was modified.""
//
// ----- Part 2: Data Parsing -----
// This query relies on the pre-parsed fields from the SecurityEvent table.
// The specific permission changes are in the 'OldSD' and 'NewSD' fields in the raw EventData.
//
// ----- Part 3: Custom Filtering -----
// This section actively hunts for modifications to high-value shares, per documentation recommendations.
//| where ShareName has_any (""SYSVOL"", ""NETLOGON"") or ShareName matches regex @""\w+\$$"" // <-- Focus on critical and administrative shares
| where not(SubjectUserName has_any ('svc', 'MSOL', '$')) // <-- EDIT THIS LIST to exclude known service accounts
// Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
// This query now focuses on identifying potentially unauthorized changes to critical infrastructure shares.
// Any unexpected modification to SYSVOL or NETLOGON on a Domain Controller is a high-severity event.
//
// ----- Part 5: Final Output -----
// This section creates a clean, readable table of high-risk share modification events.
| distinct TimeGenerated, Actor = SubjectUserName, SubjectUserSid, Computer, ShareName, SharePath = ShareLocalPath, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AA,02,12,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,5144 - A network share object was deleted,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 5144 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File Share (Success, Failure)
// Note: This event is critical for tracking when network shares are removed. This could be an expected administrative action or a malicious attempt to disrupt services or hide activity.
| where TimeGenerated > ago(90d)
| where EventID == 5144
| where Activity == ""5144 - A network share object was deleted.""
//
// ----- Part 2: Data Parsing -----
// This query relies on the pre-parsed fields from the SecurityEvent table. No manual parsing is performed.
//
// ----- Part 3: Custom Filtering -----
// This section can be used to filter for specific users or computers.
// | where SubjectUserName_ has 'unwanted_user'
// Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
// This query provides a raw log of the latest share deletion events.
//
// ----- Part 5: Final Output -----
// This section presents the unique network share deletion events, as originally requested.
| distinct TimeGenerated, SubjectUserName, SubjectUserSid, Computer, ShareLocalPath, ShareName, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AA,02,12,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,File & Object Access,Windows,SecurityEvent,Activity,5145: A network share object was checked to see whether client can be granted desired access.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 5145 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit Detailed File Share (Success, Failure)
// Note: This event generates each time a file or folder within a network share is accessed. It can be very high volume.
| where TimeGenerated > ago(90d)
| where EventID == 5145
| where Activity == ""5145 - A network share object was checked to see whether the client can be granted desired access.""
//
// ----- Part 2: Data Parsing -----
// This query relies on the pre-parsed fields from the SecurityEvent table. No manual parsing is performed.
//
// ----- Part 3: Custom Filtering -----
// This section now includes a filter to exclude common service or system accounts.
| where not(SubjectUserName has_any (""svc"", ""$"")) // <-- EDIT THIS LIST to exclude accounts by name
// Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
// This query provides a raw log of detailed access events to network shares by non-service accounts.
//
// ----- Part 5: Final Output -----
// This section presents the unique detailed share access events, as originally requested.
| distinct TimeGenerated, SubjectUserName, SubjectUserSid, Computer, IpAddress, IpPort, ObjectType, ShareLocalPath, ShareName, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AB,02,01,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Audit Log Access (Success/Failure),Windows,SecurityEvent,Activity,1100 - The event logging service has shut down.,,,"SecurityEvent
// GPO Path: To capture 1100 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > System > Audit Other System Events (Success)
// Note: This event is logged during normal system shutdowns, but an unexpected occurrence can be a sign of malicious action to cover tracks.
| where TimeGenerated > ago(90d)
| where EventID == 1100
| where Activity == ""1100 - The event logging service has shut down.""
//
// ----- Part 1: Data & Custom Filtering -----
// This event does not contain user context. Filtering is typically done by specific computers.
// | where Computer has ""TARGET-MACHINE""
//
// ----- Part 2: Final Output -----
| distinct TimeGenerated, Computer, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AB,02,02,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Audit Log Access (Success/Failure),Windows,SecurityEvent,Activity,1102 - The audit log was cleared.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 1102 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > System > Audit Other System Events (Success)
// Note: This is a high-severity event that can indicate an attacker is trying to erase evidence of their activity.
| where TimeGenerated > ago(90d)
| where EventID == 1102
| where Activity == ""1102 - The audit log was cleared.""
//
// ----- Part 2: Data Parsing -----
// This section parses the XML to extract the user who cleared the log.
| extend EventData_xml = parse_xml(EventData)
| extend
    SubjectUserSid = tostring(EventData_xml.UserData.LogFileCleared.SubjectUserSid),
    SubjectUserName = tostring(EventData_xml.UserData.LogFileCleared.SubjectUserName)
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, Computer, Actor = SubjectUserName, ActorSid = SubjectUserSid, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AB,02,03,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Audit Log Access (Success/Failure),Windows,SecurityEvent,Activity,1104 - The security log is now full.,,,"SecurityEvent
// GPO Path: To capture 1104 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > System > Audit Other System Events (Success)
// Note: This event can indicate a log flooding attack or a misconfiguration that could cause the system to stop logging new security events.
| where TimeGenerated > ago(90d)
| where EventID == 1104
//
// ----- Part 1: Analysis & Enrichment -----
// This section now creates the 'Activity' field since it is not pre-parsed for this event.
| extend Activity = ""1104 - The security log is now full.""
//
// ----- Part 2: Final Output -----
// This section creates a table of unique log full events.
| distinct TimeGenerated, Computer, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AB,02,04,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Audit Log Access (Success/Failure),Windows,SecurityEvent,Activity,1105 - Event log automatic backup,,,"SecurityEvent
// GPO Path: To capture 1105 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > System > Audit Other System Events (Success)
// Note: This event confirms that a log file was automatically backed up when it reached its maximum size.
| where TimeGenerated > ago(90d)
| where EventID == 1105
| where Activity == ""1105 - Event log automatic backup.""
//
// ----- Part 1: Data Parsing -----
// This section parses the XML data to extract the details of the log backup.
| extend EventData_xml = parse_xml(EventData)
| extend AutoBackupData = EventData_xml.UserData.AutoBackup
| extend
    BackupChannel = tostring(AutoBackupData.Channel),
    BackupPath = tostring(AutoBackupData.BackupPath)
//
// ----- Part 2: Final Output -----
// This section creates a table of unique log backup events.
| distinct TimeGenerated, Computer, Activity, BackupChannel, BackupPath
| sort by TimeGenerated desc
| take 1000",
EL0,04,AB,02,05,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Audit Log Access (Success/Failure),Windows,SecurityEvent,Activity,1108 - The event logging service encountered an error.,,,"SecurityEvent
// GPO Path: To capture 1108 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > System > Audit Other System Events (Success)
// Note: This event is critical because it means an audit event was dropped. This can indicate log tampering or system instability.
| where TimeGenerated > ago(90d)
| where EventID == 1108
| where Activity == ""1108 - The event logging service encountered an error.""
//
// ----- Part 1: Data Parsing -----
// This section parses the XML data to extract details about the logging failure.
| extend EventData_xml = parse_xml(EventData)
| extend EventProcessingFailureData = EventData_xml.UserData.EventProcessingFailure
| extend
    PublisherID = tostring(EventProcessingFailureData.PublisherID),
    DroppedEventID = tostring(EventProcessingFailureData.EventID),
    ErrorCode = tostring(EventProcessingFailureData.ErrorCode)
//
// ----- Part 2: Final Output -----
// This section creates a table of unique event processing failures.
| distinct TimeGenerated, Computer, Activity, PublisherID, DroppedEventID, ErrorCode
| sort by TimeGenerated desc
| take 1000",
EL0,04,AC,02,01,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,System Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4624: An account was successfully logged on.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4624 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logon (Success)
// Note: This is the primary event for tracking all successful user logon activity.
| where TimeGenerated > ago(90d)
| where EventID == 4624
| where Activity == ""4624 - An account was successfully logged on.""
| where AccountType == ""User""
//
// ----- Part 2: Custom Filtering -----
| where not(TargetUserName has_any ('svc', 'MSOL', '$'))
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or TargetUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend 
    LogonTypeName = case(
        LogonType == 2, ""Interactive (Console)"",
        LogonType == 3, ""Network"",
        LogonType == 4, ""Batch"",
        LogonType == 5, ""Service"",
        LogonType == 7, ""Unlock"",
        LogonType == 8, ""NetworkCleartext"",
        LogonType == 9, ""NewCredentials"",
        LogonType == 10, ""RemoteInteractive (RDP)"",
        LogonType == 11, ""CachedInteractive"",
        ""Other""
    ),
    AuthenticationProtocol = case(
        TargetUserName == ""ANONYMOUS LOGON"", ""N/A (Anonymous Logon)"",
        AuthenticationPackageName == ""NTLM"" and PackageName == ""LM"", ""LM (Legacy)"",
        AuthenticationPackageName == ""NTLM"" and PackageName == ""NTLM V1"", ""NTLMv1"",
        AuthenticationPackageName == ""NTLM"" and PackageName == ""NTLM V2"", ""NTLMv2"",
        AuthenticationPackageName
    ),
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = TargetUserSid in (Targeted_User_SIDs),
    // Flag to explicitly identify ANONYMOUS LOGON events.
    IsAnonymousLogon = (TargetUserName == ""ANONYMOUS LOGON"")
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, IsAnonymousLogon, TargetUserName, TargetUserSid, Computer, LogonTypeName, AuthenticationProtocol, IpAddress, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AC,02,02,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,System Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4625: An account failed to log on,,,"// Part 1: Define Targeted Users by Name
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their user names inside the brackets.
let Targeted_User_Names = dynamic([]); // Example: dynamic([""administrator"", ""testuser""])
//
SecurityEvent
// GPO Path: To capture 4625 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logon (Failure)
// Note: This is a critical event for detecting brute-force, password spray, and user enumeration attacks.
| where TimeGenerated > ago(90d)
| where EventID == 4625
| where Activity == ""4625 - An account failed to log on.""
| where AccountType == ""User""
//
// ----- Part 2: RDP & Custom Filtering -----
// Temporarily disabled this filter to see all logon types.
//| where LogonType == 10
// This line allows analysts to easily filter out any TargetUserName containing the specified strings.
| where not(TargetUserName has_any ('svc', 'MSOL', '$', 'himds'))
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_Names list is not empty.
| where array_length(Targeted_User_Names) == 0 or TargetUserName in (Targeted_User_Names)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    LogonTypeName = case(
        LogonType == 2, ""Interactive (Console)"",
        LogonType == 3, ""Network"",
        LogonType == 4, ""Batch"",
        LogonType == 5, ""Service"",
        LogonType == 7, ""Unlock"",
        LogonType == 8, ""NetworkCleartext"",
        LogonType == 9, ""NewCredentials"",
        LogonType == 10, ""RemoteInteractive (RDP)"",
        LogonType == 11, ""CachedInteractive"",
        ""Other""
    ),
    // Using the 'SubStatus' field provides the most accurate failure reason.
    FailureReason = case(
        SubStatus == ""0xc000006a"", ""Bad Password"",
        SubStatus == ""0xc0000064"", ""Bad Username"",
        SubStatus == ""0xc0000234"", ""Account Locked Out"",
        SubStatus == ""0xc0000072"", ""Account Disabled"",
        SubStatus == ""0xc000006f"", ""Logon Outside Authorized Hours"",
        SubStatus == ""0xc0000070"", ""Unauthorized Workstation"",
        ""Other Failure""
    ),
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = TargetUserName in (Targeted_User_Names)
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, TargetUserName, Computer, LogonProcessName, LogonTypeName, LogonType, FailureReason, IpAddress, Status, SubStatus, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AC,02,03,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,System Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4634: An account was logged off,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4634 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logoff (Success)
// Note: This event is generated when a logon session is terminated and is used to track when users log off.
| where TimeGenerated > ago(90d)
| where EventID == 4634
| where Activity == ""4634 - An account was logged off.""
| where AccountType == ""User""
//
// ----- Part 2: Custom Filtering -----
| where not(TargetUserName has_any ('MSOL', 'svc', '$'))
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or TargetUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    LogonTypeName = case(
        LogonType == 2, ""Interactive (Console)"",
        LogonType == 3, ""Network"",
        LogonType == 4, ""Batch"",
        LogonType == 5, ""Service"",
        LogonType == 10, ""RemoteInteractive (RDP)"",
        ""Other""
    ),
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = TargetUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, TargetUserName, TargetUserSid, Computer, LogonTypeName, LogonProcessName, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AC,02,04,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,System Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4647: User initiated logoff,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4647 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logoff (Success)
// Note: This event is generated when a user actively initiates a logoff (e.g., clicks 'Log Off').
| where TimeGenerated > ago(90d)
| where EventID == 4647
| where Activity == ""4647 - User initiated logoff.""
| where AccountType == ""User""
//
// ----- Part 2: Custom Filtering -----
| where not(TargetUserName has_any ('MSOL', 'svc', '$'))
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, Computer, Actor = TargetUserName, ActorSid = TargetUserSid, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AC,02,05,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,System Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4768 - A Kerberos authentication ticket (TGT) was requested,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4768 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Account Logon > Audit Kerberos Authentication Service (Success, Failure)
// Note: This event is critical for detecting Kerberoasting, AS-REP Roasting, and other Kerberos-based attacks.
| where TimeGenerated > ago(390d)
| where EventID == 4768
| where Activity == ""4768 - A Kerberos authentication ticket (TGT) was requested.""
//
// ----- Part 2: Data Parsing -----
| extend EventData_xml = parse_xml(EventData)
| extend
    TargetUserSid = tostring(EventData_xml.EventData.Data[2]['#text']),
    TargetUserName = tostring(EventData_xml.EventData.Data[0]['#text']),
    ResultCode = tostring(EventData_xml.EventData.Data[6]['#text']),
    TicketOptions = tostring(EventData_xml.EventData.Data[5]['#text']),
    TicketEncryptionType = tostring(EventData_xml.EventData.Data[7]['#text']),
    PreAuthType = tostring(EventData_xml.EventData.Data[8]['#text']),
    IpAddress = tostring(EventData_xml.EventData.Data[9]['#text']),
    AccountSupportedEncryption = tostring(EventData_xml.EventData.Data[15]['#text'])
//
// ----- Part 3: Custom & Targeted Filtering -----
| where not(TargetUserName has_any ('svc', 'MSOL', '$'))
| where array_length(Targeted_User_SIDs) == 0 or TargetUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    IsTargetedUser = TargetUserSid in (Targeted_User_SIDs),
    IsSmartCardLogon = PreAuthType in (""15"", ""16"", ""17""),
    IsWeakEncryptionUsed = TicketEncryptionType in (""0x1"", ""0x3"", ""0x17""),
    IsNoPreAuthUsed = PreAuthType == ""0"",
    IsSuspiciousResultCode = ResultCode in (""0x6"", ""0xC"", ""0x12"", ""0x18""),
    // ADDED: Proactively flags accounts that support weak RC4 encryption.
    AccountSupportsWeakCrypto = AccountSupportedEncryption has ""RC4"",
    // ADDED: Flags tickets that can be used for lateral movement or long-term persistence.
    IsForwardableTicket = TicketOptions has ""0x40000000"",
    IsRenewableTicket = TicketOptions has ""0x8000000"",
    // Translate the hex result code into a human-readable reason.
    FailureReason = case(
        ResultCode == ""0x0"", ""Success"",
        ResultCode == ""0x6"", ""Username does not exist"",
        ResultCode == ""0x12"", ""Account disabled, expired, or locked out"",
        ResultCode == ""0x18"", ""Bad password"",
        ""Other""
    )
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, Computer, TargetUserName, TargetUserSid, IpAddress, FailureReason, IsSmartCardLogon, IsWeakEncryptionUsed, IsNoPreAuthUsed, IsSuspiciousResultCode, AccountSupportsWeakCrypto, IsForwardableTicket, IsRenewableTicket, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AC,02,06,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,System Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4771 - Kerberos pre-authentication failed.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4771 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Account Logon > Audit Kerberos Authentication Service (Failure)
// Note: This event is a key indicator for Kerberos-based password spray and brute-force attacks.
| where TimeGenerated > ago(90d)
| where EventID == 4771
| where Activity == ""4771 - Kerberos pre-authentication failed.""
//
// ----- Part 2: Custom Filtering -----
// This line allows analysts to easily filter out any TargetUserName containing the specified strings.
| where not(TargetUserName has_any ('svc', 'MSOL', '$')) // <-- EDIT THIS LIST to exclude accounts
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or TargetSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
// This section keeps all of your original enrichment logic and adds the 'IsTargetedUser' flag.
| extend
    ErrorCode = tostring(Status),
    // Your original comprehensive list of failure reasons
    FailureReason = case(
        ErrorCode == ""0x0"", ""No error"",
        ErrorCode == ""0x1"", ""Client's entry in database has expired"",
        ErrorCode == ""0x2"", ""Server's entry in database has expired"",
        ErrorCode == ""0x3"", ""Requested protocol version not supported"",
        ErrorCode == ""0x4"", ""Client key encrypted in old master key"",
        ErrorCode == ""0x5"", ""Server key encrypted in old master key"",
        ErrorCode == ""0x6"", ""Client not found in Kerberos database"",
        ErrorCode == ""0x7"", ""Server not found in Kerberos database"",
        ErrorCode == ""0x8"", ""Multiple principal entries in database"",
        ErrorCode == ""0x9"", ""Null key for client or server"",
        ErrorCode == ""0xa"", ""Ticket not eligible for postdating"",
        ErrorCode == ""0xb"", ""Start time is later than end time"",
        ErrorCode == ""0xc"", ""KDC policy rejected request"",
        ErrorCode == ""0xd"", ""KDC cannot accommodate requested option"",
        ErrorCode == ""0xe"", ""Unsupported encryption type"",
        ErrorCode == ""0xf"", ""Unsupported checksum type"",
        ErrorCode == ""0x10"", ""No support for PADATA type (likely smart card cert issue)"",
        ErrorCode == ""0x11"", ""Unsupported transited type"",
        ErrorCode == ""0x12"", ""Account Disabled/Locked/Revoked"",
        ErrorCode == ""0x13"", ""Server credentials revoked"",
        ErrorCode == ""0x14"", ""TGT revoked"",
        ErrorCode == ""0x15"", ""Client not yet valid"",
        ErrorCode == ""0x16"", ""Server not yet valid"",
        ErrorCode == ""0x17"", ""Password Expired"",
        ErrorCode == ""0x18"", ""Bad Password"",
        ErrorCode == ""0x19"", ""Additional pre-auth required"",
        ErrorCode == ""0x1b"", ""Server is user-to-user only"",
        ErrorCode == ""0x1d"", ""Service unavailable"",
        ErrorCode == ""0x34"", ""Response too big for UDP — retry with TCP"",
        ErrorCode == ""0x3c"", ""Generic error"",
        ""Unknown or undocumented status code""
    ),
    // Your original flags
    IsAdminUser = (TargetUserName == ""Administrator""),
    IsHighPriorityFailure = ErrorCode in (""0x6"", ""0x12"", ""0x18""),
    // The new flexible flag
    IsTargetedUser = TargetSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
// This section presents the unique event combinations, including all original and new fields.
| distinct TimeGenerated, IsTargetedUser, Computer, TargetUserName, TargetSid, IpAddress, ErrorCode, FailureReason, IsAdminUser, IsHighPriorityFailure, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AC,02,07,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,System Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4776 - The computer attempted to validate the credentials for an account.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their user names inside the brackets.
let Targeted_User_Names = dynamic([]); // Example: dynamic([""administrator"", ""testuser""])
//
SecurityEvent
// GPO Path: To capture 4776 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Account Logon > Audit Credential Validation (Failure)
// Note: This event is critical for detecting NTLM-based brute-force, password spray, and user enumeration attacks.
| where TimeGenerated > ago(90d)
| where EventID == 4776
| where Activity == ""4776 - The domain controller attempted to validate the credentials for an account.""
//
// ----- Part 2: Data Parsing -----
// This section parses the XML data to extract key details.
| extend EventData_xml = parse_xml(EventData)
| extend
    TargetUserName = tostring(EventData_xml.EventData.Data[1]['#text']),
    SourceWorkstation = tostring(EventData_xml.EventData.Data[2]['#text']),
    ErrorCode = tostring(EventData_xml.EventData.Data[3]['#text'])
//
// ----- Part 3: Custom & Targeted Filtering -----
// This line allows analysts to easily filter out known service accounts or other noise from the results.
| where not(TargetUserName has_any ('svc', 'MSOL', '$')) // <-- EDIT THIS LIST to exclude accounts
// This applies the filter ONLY if the Targeted_User_Names list is not empty.
| where array_length(Targeted_User_Names) == 0 or TargetUserName in (Targeted_User_Names)
//
// ----- Part 4: Analysis & Enrichment -----
// This section keeps all of your original enrichment logic and adds the 'IsTargetedUser' flag.
| extend
    // Your original translation of error codes into a human-readable reason.
    FailureReason = case(
        ErrorCode == ""0x0"", ""Success"",
        ErrorCode == ""0xc000006a"", ""Bad Password"",
        ErrorCode == ""0xc0000064"", ""Bad Username (Potential Enumeration)"",
        ErrorCode == ""0xc0000234"", ""Account Locked Out"",
        ErrorCode == ""0xc0000072"", ""Account Disabled"",
        ErrorCode == ""0xc0000070"", ""Unauthorized Workstation"",
        ""Other Failure""
    ),
    // Your original flag for high-priority failure types.
    IsHighPriorityFailure = ErrorCode in (""0xc000006a"", ""0xc0000064"", ""0xc0000234"", ""0xc0000072"", ""0xc0000070""),
    // The new flexible flag for targeted users.
    IsTargetedUser = TargetUserName in (Targeted_User_Names)
//
// ----- Part 5: Final Output -----
// This section presents the unique event combinations, including all original and new fields.
| distinct TimeGenerated, IsTargetedUser, Computer, TargetUserName, SourceWorkstation, ErrorCode, FailureReason, IsHighPriorityFailure, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AC,02,08,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,System Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4800 - The workstation was locked.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4800 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Other Logon/Logoff Events (Success)
// Note: This event tracks when a user locks their workstation.
| where TimeGenerated > ago(90d)
| where EventID == 4800
| where Activity == ""4800 - The workstation was locked.""
//
// ----- Part 2: Custom Filtering -----
// This line allows analysts to easily filter out any TargetUserName containing the specified strings.
| where not(TargetUserName has_any ('svc', 'MSOL', '$')) // <-- EDIT THIS LIST to exclude accounts
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or TargetUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = TargetUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, Computer, Actor = TargetUserName, ActorSid = TargetUserSid, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AC,02,09,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,System Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4801 - The workstation was unlocked.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4801 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Other Logon/Logoff Events (Success)
// Note: This event tracks when a user unlocks their workstation, indicating they have resumed an interactive session.
| where TimeGenerated > ago(90d)
| where EventID == 4801
| where Activity == ""4801 - The workstation was unlocked.""
//
// ----- Part 2: Custom Filtering -----
// This line allows analysts to easily filter out any TargetUserName containing the specified strings.
| where not(TargetUserName has_any ('svc', 'MSOL', '$')) // <-- EDIT THIS LIST to exclude accounts
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or TargetUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = TargetUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, Computer, Actor = TargetUserName, ActorSid = TargetUserSid, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AD,02,01,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Privilege Access & Log Off (Success /Failure),Windows,SecurityEvent,Activity,4624 - An account was successfully logged on.,,,"/ Part 1: Define Privileged Accounts
let Privileged_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4624 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logon (Success)
// Note: This query focuses on successful logons by defined privileged accounts.
| where TimeGenerated > ago(90d)
| where EventID == 4624
| where Activity == ""4624 - An account was successfully logged on.""
| where AccountType == ""User""
// ----- Part 2: Custom Filtering -----
| where not(TargetUserName has_any ('svc', 'MSOL', '$', 'ANONYMOUS LOGON'))
// ----- Part 3: Flexible Filtering for Privileged Accounts -----
| where array_length(Privileged_User_SIDs) == 0 or TargetUserSid in (Privileged_User_SIDs)
// ----- Part 4: Analysis & Enrichment -----
| extend
    IsPrivilegedLogon = TargetUserSid in (Privileged_User_SIDs),
    LogonTypeName = case(
        LogonType == 2, ""Interactive (Console)"",
        LogonType == 3, ""Network"",
        LogonType == 4, ""Batch"",
        LogonType == 5, ""Service"",
        LogonType == 10, ""RemoteInteractive (RDP)"",
        ""Other""
    ),
    AuthenticationProtocol = case(
        AuthenticationPackageName == ""NTLM"" and PackageName == ""LM"", ""LM (Legacy)"",
        AuthenticationPackageName == ""NTLM"" and PackageName == ""NTLM V1"", ""NTLMv1"",
        AuthenticationPackageName == ""NTLM"" and PackageName == ""NTLM V2"", ""NTLMv2"",
        AuthenticationPackageName
    )
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsPrivilegedLogon, TargetUserName, TargetUserSid, Computer, LogonTypeName, AuthenticationProtocol, IpAddress, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AD,02,02,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Privilege Access & Log Off (Success /Failure),Windows,SecurityEvent,Activity,4634 - An account was logged off.,,,"// Part 1: Define Privileged Accounts
let Privileged_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4634 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logoff (Success)
// Note: This event is generated when a logon session is terminated.
| where TimeGenerated > ago(90d)
| where EventID == 4634
| where Activity == ""4634 - An account was logged off.""
| where AccountType == ""User""
// ----- Part 2: Custom Filtering -----
| where not(TargetUserName has_any ('MSOL', 'svc', '$'))
// ----- Part 3: Flexible Filtering for Privileged Accounts -----
| where array_length(Privileged_User_SIDs) == 0 or TargetUserSid in (Privileged_User_SIDs)
// ----- Part 4: Analysis & Enrichment -----
| extend
    IsPrivilegedLogoff = TargetUserSid in (Privileged_User_SIDs),
    LogonTypeName = case(
        LogonType == 2, ""Interactive (Console)"",
        LogonType == 3, ""Network"",
        LogonType == 10, ""RemoteInteractive (RDP)"",
        LogonType == 4, ""Batch"",
        LogonType == 5, ""Service"",
        ""Other""
    )
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsPrivilegedLogoff, TargetUserName, TargetUserSid, Computer, LogonTypeName, LogonProcessName, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AD,02,03,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Privilege Access & Log Off (Success /Failure),Windows,SecurityEvent,Activity,4647 - User initiated logoff.,,,"// Part 1: Define Privileged Accounts
let Privileged_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4647 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logoff (Success)
// Note: This event is generated when a user actively initiates a logoff (e.g., clicks 'Log Off').
| where TimeGenerated > ago(90d)
| where EventID == 4647
| where Activity == ""4647 - User initiated logoff.""
| where AccountType == ""User""
// ----- Part 2: Custom Filtering -----
| where not(SubjectUserName has_any ('MSOL', 'svc', '$'))
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
| where array_length(Privileged_User_SIDs) == 0 or SubjectUserSid in (Privileged_User_SIDs)
// ----- Part 4: Analysis & Enrichment -----
| extend
    IsPrivilegedLogoff = SubjectUserSid in (Privileged_User_SIDs)
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsPrivilegedLogoff, Computer, Actor = TargetUserName, ActorSid = TargetUserSid, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AD,02,04,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Privilege Access & Log Off (Success /Failure),Windows,SecurityEvent,Activity,4648: A logon was attempted using explicit credentials,,,"// Part 1: Define Privileged Accounts
let Privileged_User_Names = dynamic([]); // Example: dynamic([""administrator"", ""xadmin""]) this is directed at the TARGET user for cross user activity
//
SecurityEvent
// GPO Path: To capture 4648 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logon (Success)
// Note: This event is critical for tracking 'Run As' activity. We must target by name as the Target SID is not available.
| where TimeGenerated > ago(190d)
| where EventID == 4648
| where Activity == ""4648 - A logon was attempted using explicit credentials.""
| where AccountType == ""User""
// ----- Part 2: Custom Filtering -----
| where not(TargetUserName has_any ('svc', 'MSOL', '$'))
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
| where array_length(Privileged_User_Names) == 0 or TargetUserName in (Privileged_User_Names)
// ----- Part 4: Analysis & Enrichment -----
| extend
    IsPrivilegedLogon = TargetUserName in (Privileged_User_Names),
    IsCrossUserActivity = (SubjectUserName != TargetUserName)
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsPrivilegedLogon, IsCrossUserActivity, SubjectUserName, TargetUserName, Computer, ProcessName, IpAddress, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AD,02,05,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Privilege Access & Log Off (Success /Failure),Windows,SecurityEvent,Activity,4672 - Special privileges assigned to new logon,,,"// Part 1: Define Privileged Accounts
let Privileged_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4672 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Special Logon (Success)
// Note: This event shows when sensitive privileges are assigned to a new logon session.
| where TimeGenerated > ago(90d)
| where EventID == 4672
| where Activity == ""4672 - Special privileges assigned to new logon.""
// ----- Part 2: Custom Filtering -----
| where not(SubjectUserName has_any ('MSOL', 'svc', '$'))
// ----- Part 3: Flexible Filtering for Privileged Accounts -----
| where array_length(Privileged_User_SIDs) == 0 or SubjectUserSid in (Privileged_User_SIDs)
// ----- Part 4: Analysis & Enrichment -----
| extend
    IsPrivilegedLogon = SubjectUserSid in (Privileged_User_SIDs)
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsPrivilegedLogon, SubjectUserName, SubjectUserSid, Computer, PrivilegeList, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AD,02,06,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Privilege Access & Log Off (Success /Failure),Windows,SecurityEvent,Activity,4673 - A privileged service was called,,,"// Part 1: Define Privileged Accounts
// This list should be customized with the SIDs of user accounts you consider privileged.
let Privileged_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
// This list contains privileges that are often abused by attackers (e.g., for credential dumping).
let SuspiciousPrivileges = dynamic([
    ""SeDebugPrivilege"",
    ""SeLoadDriverPrivilege"",
    ""SeTcbPrivilege""
]);
//
SecurityEvent
// GPO Path: To capture 4673 events, you must enable the following subcategory:
// -Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Privilege Use > Audit Sensitive Privilege Use
| where TimeGenerated > ago(90d)
| where EventID == 4673
| where Activity == ""4673 - A privileged service was called.""
//
// ----- Part 2: Data Parsing -----
// This section now explicitly parses the required fields from the EventData XML.
| extend EventData_xml = parse_xml(EventData)
| extend
    SubjectUserSid = tostring(EventData_xml.EventData.Data[0]['#text']),
    SubjectUserName = tostring(EventData_xml.EventData.Data[1]['#text']),
    SubjectDomainName = tostring(EventData_xml.EventData.Data[2]['#text']),
    SubjectLogonId = tostring(EventData_xml.EventData.Data[3]['#text']),
    Service = tostring(EventData_xml.EventData.Data[4]['#text']),
    ServiceName = tostring(EventData_xml.EventData.Data[5]['#text']),
    PrivilegeList = tostring(EventData_xml.EventData.Data[6]['#text']),
    ProcessId = tostring(EventData_xml.EventData.Data[7]['#text']),
    ProcessName = tostring(EventData_xml.EventData.Data[8]['#text'])
//
// ----- Part 3: Custom & Privileged Filtering -----
| where not(SubjectUserName has_any ('svc', 'MSOL', '$')) // <-- EDIT THIS LIST to exclude accounts
// Filters to ONLY show events where a privileged user called a privileged service.
// ----- Part 4: Flexible Filtering for Privileged Accounts -----
| where array_length(Privileged_User_SIDs) == 0 or SubjectUserSid in (Privileged_User_SIDs)
//
// ----- Part 5: Analysis & Threat Hunting -----
| extend
    IsPrivilegedUse = true,
    // CORRECTED: Replaced '!has_any' with the standard 'not(has_any())' function.
    IsHighlySuspiciousUse = (PrivilegeList has_any (SuspiciousPrivileges) and not(ProcessName has_any (""C:\\Windows\\System32\\lsass.exe"", ""C:\\Windows\\System32\\wininit.exe"")))
//
// ----- Part 6: Final Output -----
| distinct TimeGenerated, IsPrivilegedUse, IsHighlySuspiciousUse, SubjectUserName, SubjectUserSid, Computer, Service, ProcessName, PrivilegeList, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AD,02,07,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Privilege Access & Log Off (Success /Failure),Windows,SecurityEvent,Activity,4674 - An operation was attempted on a privileged object,,,"// Part 1: Define Privileged Accounts
// This list should be customized with the SIDs of user accounts you consider privileged.
let Privileged_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
// This list contains privileges that are often abused by attackers.
let SuspiciousPrivileges = dynamic([
    ""SeDebugPrivilege"",
    ""SeLoadDriverPrivilege"",
    ""SeSecurityPrivilege""
]);
//
SecurityEvent
// GPO Path: To capture 4674 events, you must enable the following subcategory:
// -Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Privilege Use > Audit Sensitive Privilege Use
| where TimeGenerated > ago(90d)
| where EventID == 4674
| where Activity == ""4674 - An operation was attempted on a privileged object.""
//
// ----- Part 2: Custom Filtering -----
// This line allows analysts to easily filter out any SubjectUserName containing the specified strings.
| where not(SubjectUserName has_any ('svc', 'MSOL', '$')) // <-- EDIT THIS LIST to exclude accounts
//
// ----- Part 3: Filtering for Privileged Accounts -----
// Filters to ONLY show events where a privileged user called a privileged service.
// ----- Part 4: Flexible Filtering for Privileged Accounts -----
| where array_length(Privileged_User_SIDs) == 0 or SubjectUserSid in (Privileged_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // Add an explicit flag for clarity. This will always be 'true' due to the filter in Part 3.
    IsPrivilegedOperation = true,
    // Flag for highly suspicious activity, like using SeDebugPrivilege from a non-system process.
    IsHighlySuspiciousUse = (PrivilegeList has_any (SuspiciousPrivileges) and not(ProcessName has_any (""C:\\Windows\\System32\\lsass.exe"", ""C:\\Windows\\System32\\wininit.exe"")))
//
// ----- Part 5: Final Output -----
// This section creates the final output table.
| distinct TimeGenerated, IsPrivilegedOperation, IsHighlySuspiciousUse, SubjectUserName, SubjectUserSid, Computer, ObjectServer, ObjectName, ProcessName, PrivilegeList, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AE,02,01,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,RDP Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4624 - An account was successfully logged on.,,,"// To see all activity, leave the list empty: dynamic([])
// To target specific users, add SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([""""]); // Example: dynamic([""S-1-5-..."", ""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 4624 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logon (Success)
// Note: This query filters for LogonType == 10 to specifically track successful RDP logons.
| where TimeGenerated > ago(90d)
| where EventID == 4624
| where Activity == ""4624 - An account was successfully logged on.""
| where LogonType == 10 and AccountType == ""User""
//
// ----- Part 2: Custom Filtering -----
| where not(TargetUserName has_any ('svc', 'MSOL', '$', 'ANONYMOUS LOGON'))
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This line correctly applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or TargetUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend 
    LogonTypeName = ""RemoteInteractive (RDP)"",
    AuthenticationProtocol = case(
        AuthenticationPackageName == ""NTLM"" and PackageName == ""LM"", ""LM (Legacy)"",
        AuthenticationPackageName == ""NTLM"" and PackageName == ""NTLM V1"", ""NTLMv1"",
        AuthenticationPackageName == ""NTLM"" and PackageName == ""NTLM V2"", ""NTLMv2"",
        AuthenticationPackageName
    ),
    // This flag is still useful for identifying a targeted user when viewing all results.
    IsTargetedUser = TargetUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, TargetUserName, TargetUserSid, Computer, LogonTypeName, AuthenticationProtocol, IpAddress, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AE,02,02,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,RDP Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4625 - An account failed to log on.,,,"// Part 1: Define Targeted Users by Name
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their user names inside the brackets.
let Targeted_User_Names = dynamic([]); // Example: dynamic([""administrator"", ""xadmin""])
//
SecurityEvent
// GPO Path: To capture 4625 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logon (Failure)
// Note: This query filters for LogonType == 10 to specifically track failed RDP logons, which is key for detecting brute-force attacks.
| where TimeGenerated > ago(90d)
| where EventID == 4625
| where Activity == ""4625 - An account failed to log on.""
| where AccountType == ""User""
//
// ----- Part 2: RDP & Custom Filtering -----
| where LogonType == 10
| where not(TargetUserName has_any ('svc', 'MSOL', '$', 'himds'))
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_Names) == 0 or TargetUserName in (Targeted_User_Names)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    LogonTypeName = ""RemoteInteractive (RDP)"",
    FailureReason = case(
        SubStatus == ""0xc000006a"", ""Bad Password"",
        SubStatus == ""0xc0000064"", ""Bad Username"",
        SubStatus == ""0xc0000234"", ""Account Locked Out"",
        SubStatus == ""0xc0000072"", ""Account Disabled"",
        SubStatus == ""0xc000006f"", ""Logon Outside Authorized Hours"",
        SubStatus == ""0xc0000070"", ""Unauthorized Workstation"",
        ""Other Failure""
    ),
    IsTargetedUser = TargetUserName in (Targeted_User_Names),
    FailureContext = iff(IpAddress == ""0.0.0.0"", ""Failure at Network Level Authentication (NLA)"", """")
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, TargetUserName, Computer, LogonProcessName, LogonTypeName, FailureReason, IpAddress, FailureContext, Status, SubStatus, Activity
| sort by TimeGenerated desc
| take 100",
EL0,04,AE,02,04,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,RDP Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4778 - A session was reconnected to a Window Station.,,,"// Part 1: Define Targeted Users by Name
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their user names inside the brackets.
let Targeted_User_Names = dynamic([]); // Example: dynamic([""r.finn"", ""xadmin""])
//
SecurityEvent
// GPO Path: To capture 4778 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Other Logon/Logoff Events (Success)
// Note: This event tracks when a user reconnects to an existing RDP session.
| where TimeGenerated > ago(90d)
| where EventID == 4778
| where Activity == ""4778 - A session was reconnected to a Window Station.""
//
// ----- Part 2: RDP & Custom Filtering -----
| where SessionName has ""RDP""
| where not(AccountName has_any ('svc', 'MSOL', '$'))
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_Names) == 0 or AccountName in (Targeted_User_Names)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    IsExternalReconnect = not(ipv4_is_private(ClientAddress)),
    IsTargetedUser = AccountName in (Targeted_User_Names)
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, AccountName, AccountDomain, Computer, SessionName, ClientName, ClientAddress, IsExternalReconnect, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AE,02,05,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,RDP Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4779 - A session was disconnected from a Window Station.,,,"// Part 1: Define Targeted Users by Name
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their user names inside the brackets.
let Targeted_User_Names = dynamic([]); // Example: dynamic([""r.finn"", ""xadmin""])
//
SecurityEvent
// GPO Path: To capture 4779 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Other Logon/Logoff Events (Success)
// Note: This event tracks when a user disconnects an RDP session without fully logging off.
| where TimeGenerated > ago(190d)
| where EventID == 4779
| where Activity == ""4779 - A session was disconnected from a Window Station.""
//
// ----- Part 2: RDP & Custom Filtering -----
| where SessionName has ""RDP""
| where not(AccountName has_any ('svc', 'MSOL', '$'))
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_Names) == 0 or AccountName in (Targeted_User_Names)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    IsExternalDisconnect = not(ipv4_is_private(ClientAddress)),
    IsTargetedUser = AccountName in (Targeted_User_Names)
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, AccountName, AccountDomain, Computer, SessionName, ClientName, ClientAddress, IsExternalDisconnect, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AE,02,03,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,RDP Access & Log Off (Success/Failure),Windows,SecurityEvent,Activity,4634 - An account was logged off.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
// ----- Part 2: Gather RDP Logoff Events -----
let RDP_Logoffs =
    SecurityEvent
// GPO Path: To capture 4634 events, you must enable the following subcategory:
// -Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logon (Success) and Audit Logoff (Success)
    | where TimeGenerated > ago(190d)
    | where EventID == 4634
    | where LogonType == 10
    | project LogoffTime = TimeGenerated, Computer, TargetUserName, TargetUserSid, TargetLogonId, LogoffActivity = Activity;
//
// ----- Part 3: Gather RDP Logon Events -----
let RDP_Logons =
    SecurityEvent
// GPO Path: To capture 4624 events, you must enable the following subcategory:
// -Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Logon/Logoff > Audit Logon (Success) and Audit Logoff (Success)
    | where TimeGenerated > ago(90d)
    | where EventID == 4624
    | where LogonType == 10
    | project LogonTime = TimeGenerated, Source_IP = IpAddress, Source_Computer = ClientName, TargetLogonId, LogonActivity = Activity;
//
// ----- Part 4: Join, Filter, and Enrich Data -----
RDP_Logoffs
| join kind=inner RDP_Logons on TargetLogonId
// Use 'summarize' to group identical sessions and find the true start/end time.
// MODIFIED: Added UserSid to the 'by' clause to make it available for filtering.
| summarize LogonTime = min(LogonTime), LogoffTime = max(LogoffTime), LogonActivity = take_any(LogonActivity), LogoffActivity = take_any(LogoffActivity) by User = TargetUserName, UserSid = TargetUserSid, RDP_Server = Computer, Source_Computer, Source_IP
// Calculate the session duration.
| extend SessionDuration = LogoffTime - LogonTime
// ADDED: Flexible filtering section.
| where array_length(Targeted_User_SIDs) == 0 or UserSid in (Targeted_User_SIDs)
| extend IsTargetedUser = UserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
// Select and rename columns for a clean, final report.
| project LogonTime, LogoffTime, SessionDuration, User, UserSid, IsTargetedUser, RDP_Server, Source_Computer, Source_IP, LogonActivity, LogoffActivity
| sort by LogonTime desc
| take 1000",
EL0,04,AF,02,01,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,SMB Access,Windows,SecurityEvent,Activity,5140 - A network share object was accessed.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 5140 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File Share (Success, Failure)
// Note: This event tracks the initial connection to a network share.
| where TimeGenerated > ago(90d)
| where EventID == 5140
| where Activity == ""5140 - A network share object was accessed.""
//
// ----- Part 2: Custom Filtering -----
| where not(SubjectUserName has_any ('MSOL', '$'))
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // Flag if the access was performed by a user in your targeted list.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs),
    // Flag connections that originate from outside of private IP address space.
    IsExternalAccess = not(ipv4_is_private(IpAddress)),
    // Flag connections to administrative shares (e.g., C$, ADMIN$).
    IsAdminShareAccess = ShareName endswith ""$""
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, SubjectUserName, SubjectUserSid, IsTargetedUser, Computer, ShareName, ShareLocalPath, IpAddress, IsExternalAccess, IsAdminShareAccess, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AF,02,02,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,SMB Access,Windows,SecurityEvent,Activity,5142 - A network share object was added.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 5142 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File Share (Success, Failure)
// Note: This event is critical for detecting potentially unauthorized data sharing or malware staging areas.
| where TimeGenerated > ago(90d)
| where EventID == 5142
| where Activity == ""5142 - A network share object was added.""
//
// ----- Part 2: Custom Filtering -----
| where not(SubjectUserName has_any ('MSOL', '$'))
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // Flag if the access was performed by a user in your targeted list.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs),
    // Flag if the new share is a hidden administrative share.
    IsAdminShare = ShareName endswith ""$"",
    // Flag if a sensitive system path was shared.
    IsRiskyPath = (ShareLocalPath in~ (""C:\\"", ""C:\\Windows"", ""C:\\Windows\\System32""))
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, SubjectUserName, SubjectUserSid, IsTargetedUser, Computer, ShareName, ShareLocalPath, IsAdminShare, IsRiskyPath, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AF,02,03,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,SMB Access,Windows,SecurityEvent,Activity,5143 - A network share object was modified.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 5143 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File Share (Success)
// Note: This event is critical for tracking permission changes or other modifications to sensitive shares.
| where TimeGenerated > ago(90d)
| where EventID == 5143
| where Activity == ""5143 - A network share object was modified.""
//
// ----- Part 2: Data Parsing -----
| extend EventData_xml = parse_xml(EventData)
| extend
    SubjectUserSid = tostring(EventData_xml.EventData.Data[0]['#text']),
    SubjectUserName = tostring(EventData_xml.EventData.Data[1]['#text']),
    ShareName = tostring(EventData_xml.EventData.Data[4]['#text']),
    ShareLocalPath = tostring(EventData_xml.EventData.Data[5]['#text']),
    OldSD = tostring(EventData_xml.EventData.Data[11]['#text']),
    NewSD = tostring(EventData_xml.EventData.Data[12]['#text'])
//
// ----- Part 3: Custom Filtering -----
| where not(SubjectUserName has_any ('MSOL', '$'))
//
// ----- Part 4: Flexible Filtering for Targeted Accounts -----
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Analysis & Enrichment -----
| extend
    // Flag if the action was performed by a user in your targeted list.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs),
    // Flag if the share's permissions (Security Descriptor) were changed.
    PermissionsChanged = (OldSD != NewSD),
    // Flag if the share being modified is an administrative share.
    IsAdminShare = ShareName endswith ""$""
//
// ----- Part 6: Final Output -----
| distinct TimeGenerated, SubjectUserName, SubjectUserSid, IsTargetedUser, Computer, ShareName, IsAdminShare, PermissionsChanged, OldSD, NewSD, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AF,02,04,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,SMB Access,Windows,SecurityEvent,Activity,5144 - A network share object was deleted.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 5144 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit File Share (Success)
// Note: This event is critical for tracking when network shares are removed, which could be a malicious attempt to disrupt services.
| where TimeGenerated > ago(90d)
| where EventID == 5144
| where Activity == ""5144 - A network share object was deleted.""
//
// ----- Part 2: Custom Filtering -----
| where not(SubjectUserName has_any ('MSOL', '$'))
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // Flag if the action was performed by a user in your targeted list.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs),
    // Flag if the deleted share was a hidden administrative share.
    IsAdminShare = ShareName endswith ""$"",
    // Flag if the deleted share was pointing to a sensitive system path.
    IsRiskyPath = (ShareLocalPath in~ (""C:\\"", ""C:\\Windows"", ""C:\\Windows\\System32""))
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, SubjectUserName, SubjectUserSid, IsTargetedUser, Computer, ShareName, ShareLocalPath, IsAdminShare, IsRiskyPath, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AF,02,05,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,SMB Access,Windows,SecurityEvent,Activity,5145 - A network share object was checked to see whether the client can be granted desired access.,,,"// Part 1: Define Targeted Users & High-Risk Items
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
// This list contains access rights that are critical to monitor.
let HighRiskActions = dynamic([""DELETE"", ""WRITE_DAC"", ""WRITE_OWNER""]);
// This list contains file extensions that might be used for malware staging or data exfiltration.
let SensitiveExtensions = dynamic(["".ps1"", "".bat"", ""exe"", "".zip"", "".rar"", "".7z""]);
//
SecurityEvent
// GPO Path: To capture 5145 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit Detailed File Share (Success, Failure)
// Note: This event generates an entry for every file/folder access and can be very high volume.
| where TimeGenerated > ago(90d)
| where EventID == 5145
| where Activity == ""5145 - A network share object was checked to see whether the client can be granted desired access.""
//
// ----- Part 2: Custom & Targeted Filtering -----
| where not(SubjectUserName has_any ('MSOL', '$'))
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 3: Analysis & Enrichment -----
| extend
    // Flag if the access was performed by a user in your targeted list.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs),
    // Flag if a user requested high-risk permissions.
    IsHighRiskAccess = AccessList has_any (HighRiskActions),
    // Flag if the file being accessed has a potentially sensitive extension.
    IsSensitiveFileAccess = RelativeTargetName has_any (SensitiveExtensions)
//
// ----- Part 4: Final Output -----
| distinct TimeGenerated, SubjectUserName, IsTargetedUser, SubjectUserSid, Computer, ShareName, RelativeTargetName, AccessList, IpAddress, IsHighRiskAccess, IsSensitiveFileAccess, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AF,02,06,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,SMB Access,Windows,SecurityEvent,Activity,5168 - SPN check for SMB/SMB2 failed.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 5168 events, it's recommended to enable NTLM auditing policies, e.g.:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Local Policies > Security Options > Network security: Restrict NTLM: Audit NTLM authentication in this domain
// Note: This event is a strong indicator that a client is attempting to use weak, legacy authentication like NTLMv1.
| where TimeGenerated > ago(90d)
| where EventID == 5168
| where Activity == ""5168 - SPN check for SMB/SMB2 failed.""
//
// ----- Part 2: Data Parsing -----
| extend EventData_xml = parse_xml(EventData)
| extend
    SubjectUserSid = tostring(EventData_xml.EventData.Data[0]['#text']),
    SubjectUserName = tostring(EventData_xml.EventData.Data[1]['#text']),
    IpAddress = tostring(EventData_xml.EventData.Data[4]['#text']),
    TargetAccountName = tostring(EventData_xml.EventData.Data[7]['#text']),
    Status = tostring(EventData_xml.EventData.Data[8]['#text'])
//
// ----- Part 3: Custom & Targeted Filtering -----
| where not(SubjectUserName has_any ('MSOL', '$'))
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    FailureReason = case(
        Status == ""0xc00000df"", ""No Such Domain or Computer Name"",
        ""Other""
    ),
    IsLegacyAuthIndicated = true,
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
| distinct TimeGenerated, IsTargetedUser, SubjectUserName, SubjectUserSid, Computer, TargetAccountName, IpAddress, FailureReason, IsLegacyAuthIndicated, Status, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AF,02,07,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,SMB Access,Windows,SecurityEvent,Activity,6416 - A new external device was recognized by the System.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 6416 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit Removable Storage (Success)
// Note: This is a critical event for Data Loss Prevention (DLP) and tracking unauthorized device connections.
| where TimeGenerated > ago(90d)
| where EventID == 6416
| where Activity == ""6416 - A new external device was recognized by the System.""
//
// ----- Part 2: Custom Filtering -----
// This line allows analysts to easily filter out any SubjectUserName containing the specified strings.
| where not(SubjectUserName has_any ('MSOL', '$')) // <-- EDIT THIS LIST to exclude accounts
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // Flag if the device is a USB storage device, the most common type of removable media.
    IsUsbStorageDevice = (ClassName == ""USB"" or DeviceDescription has ""USB Mass Storage""),
    // Flag if the device was connected by a user in your targeted list.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
// This section creates a table of device connection events.
| distinct TimeGenerated, SubjectUserName, SubjectUserSid, IsTargetedUser, Computer, DeviceDescription, ClassName, VendorIds, HardwareIds, IsUsbStorageDevice, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AG,02,2,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Installation or Removal of Storage Volumes or Removeable Media,Windows,SecurityEvent,EventID,6416 - A new external device was recognized by the System,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture 6416 events, you must enable the following subcategory:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit Removable Storage (Success)
// Note: This is a critical event for Data Loss Prevention (DLP) and tracking unauthorized device connections.
| where TimeGenerated > ago(90d)
| where EventID == 6416
| where Activity == ""6416 - A new external device was recognized by the System""
//
// ----- Part 2: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 3: Analysis & Enrichment -----
| extend
    // Flag if the device is a USB storage device.
    IsUsbStorageDevice = (ClassName == ""USB"" or DeviceDescription has ""USB Mass Storage""),
    // Flag if the device was connected by a user in your targeted list.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs),
    // ADDED: Flag for anomalous actors, per security recommendations.
    IsAnomalousActor = (SubjectUserSid != ""S-1-5-18"")
//
// ----- Part 4: Final Output -----
// This section creates a table of device connection events with the new flag.
| distinct TimeGenerated, IsTargetedUser, IsAnomalousActor, SubjectUserName, SubjectUserSid, Computer, DeviceDescription, ClassName, VendorIds, HardwareIds, Activity
| sort by TimeGenerated desc
| take 1000",
EL0,04,AG,02,1,Operating Systems,Windows Infrastructure,User and Administrator Access to OS Components and Applications,Installation or Removal of Storage Volumes or Removeable Media,Windows,SecurityEvent,EventID,4663 - An attempt was made to access an object.,,,"// Part 1: Define Targeted Users
// To see all activity, leave the list empty: dynamic([])
// To target specific users, add their SIDs inside the brackets.
let Targeted_User_SIDs = dynamic([]); // Example: dynamic([""S-1-5-...""])
//
SecurityEvent
// GPO Path: To capture this event for removable storage, you must enable:
// - Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access > Audit Removable Storage (Success, Failure)
// Note: This event requires a SACL on the files/folders to be audited.
| where TimeGenerated > ago(90d)
| where EventID == 4663
| where Activity == ""4663 - An attempt was made to access an object.""
//
// ----- Part 2: Custom Filtering -----
// This filter focuses only on actions taken by user accounts.
| where AccountType == 'User'
// ADDED: This filter focuses only on objects on drives other than C:, which typically represent removable media.
| where ObjectName matches regex @""^[D-Z]:\\""
//
// ----- Part 3: Flexible Filtering for Targeted Accounts -----
// This applies the filter ONLY if the Targeted_User_SIDs list is not empty.
| where array_length(Targeted_User_SIDs) == 0 or SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 4: Analysis & Enrichment -----
| extend
    // This flag is useful for identifying a targeted user when viewing all results.
    IsTargetedUser = SubjectUserSid in (Targeted_User_SIDs)
//
// ----- Part 5: Final Output -----
// This section presents the unique access events, sorted by the most recent time.
| distinct TimeGenerated, IsTargetedUser, Account, SubjectUserSid, ObjectName, ObjectType, Computer, Activity
| sort by TimeGenerated desc
| take 1000",
